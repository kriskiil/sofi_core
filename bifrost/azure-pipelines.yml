pool:
  vmImage: 'ubuntu-latest'

variables:
  listenerImageName: '$(dockerId)/bifrost-listener:$(Build.SourceBranchName)'
  brokerImageName: '$(dockerId)/sap-queue-broker:$(Build.SourceBranchName)'
  listenerImageNameRelease: '$(dockerId)/bifrost-listener:latest'
  brokerImageNameRelease: '$(dockerId)/sap-queue-broker:latest'

steps:
- script: docker build -f ./bifrost_listener/Dockerfile -t $(listenerImageName) ./bifrost_listener
  displayName: 'Docker build and test listener'
  workingDirectory: bifrost

- script: docker build -f ./bifrost_queue_broker/Dockerfile -t $(brokerImageName) ./bifrost_queue_broker
  displayName: 'Docker build and test broker'
  workingDirectory: bifrost

- script: |
    export id=$(docker images --filter "label=test=true" -q | head -1)
    docker create --name testcontainer $id
    docker cp testcontainer:/app/junit.xml ./junit.xml
    docker rm testcontainer
  displayName: 'Get test results'
  condition: succeededOrFailed()

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/junit.xml' 
    searchFolder: '$(System.DefaultWorkingDirectory)/'
    publishRunAttachments: true
    failTaskOnFailedTests: true
  displayName: 'Publish test results'
  condition: succeededOrFailed()

- script: |
    echo $(dockerPass) | docker login -u $(dockerId) --password-stdin
    docker push $(listenerImageName)
    docker push $(brokerImageName)
  displayName: 'Publish docker images'

- script: |
    echo 'cat /dev/stdin | docker login -u $(dockerId) --password-stdin' > deployment.sh
    echo 'docker pull $(listenerImageName)' >> deployment.sh
    echo 'docker tag $(listenerImageName) $(listenerImageNameRelease)' >> deployment.sh
    echo 'docker push $(listenerImageNameRelease)' >> deployment.sh
    echo 'docker pull $(brokerImageName)' >> deployment.sh
    echo 'docker tag $(brokerImageName) $(brokerImageNameRelease)' >> deployment.sh
    echo 'docker push $(brokerImageNameRelease)' >> deployment.sh
  displayName: 'Create deployment script'

- publish: deployment.sh
  artifact: LISTENERS_DEPLOYMENT