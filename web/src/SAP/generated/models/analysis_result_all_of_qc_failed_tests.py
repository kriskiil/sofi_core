# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from web.src.SAP.generated.models.base_model_ import Model
from web.src.SAP.generated import util


class AnalysisResultAllOfQcFailedTests(Model):



    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, name=None, display_name=None, reason=None):  # noqa: E501
        """AnalysisResultAllOfQcFailedTests - a model defined in OpenAPI

        :param name: The name of this AnalysisResultAllOfQcFailedTests.  # noqa: E501
        :type name: str
        :param display_name: The display_name of this AnalysisResultAllOfQcFailedTests.  # noqa: E501
        :type display_name: str
        :param reason: The reason of this AnalysisResultAllOfQcFailedTests.  # noqa: E501
        :type reason: str
        """
        self.openapi_types = {
            'name': str,
            'display_name': str,
            'reason': str,
        }

        self.attribute_map = {
            'name': 'name',
            'display_name': 'display_name',
            'reason': 'reason',
        }

        self._name = name
        self._display_name = display_name
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnalysisResult_allOf_qc_failed_tests of this AnalysisResultAllOfQcFailedTests.  # noqa: E501
        :rtype: AnalysisResultAllOfQcFailedTests
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this AnalysisResultAllOfQcFailedTests.


        :return: The name of this AnalysisResultAllOfQcFailedTests.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this AnalysisResultAllOfQcFailedTests.


        :param name: The name of this AnalysisResultAllOfQcFailedTests.
        :type name: str
        """

        self._name = name

    @property
    def display_name(self):
        """Gets the display_name of this AnalysisResultAllOfQcFailedTests.


        :return: The display_name of this AnalysisResultAllOfQcFailedTests.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this AnalysisResultAllOfQcFailedTests.


        :param display_name: The display_name of this AnalysisResultAllOfQcFailedTests.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def reason(self):
        """Gets the reason of this AnalysisResultAllOfQcFailedTests.


        :return: The reason of this AnalysisResultAllOfQcFailedTests.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this AnalysisResultAllOfQcFailedTests.


        :param reason: The reason of this AnalysisResultAllOfQcFailedTests.
        :type reason: str
        """

        self._reason = reason
