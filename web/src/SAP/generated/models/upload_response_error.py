# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from .. import util


class UploadResponseError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, isolate_id=None, error=None):  # noqa: E501
        """UploadResponseError - a model defined in OpenAPI

        :param isolate_id: The isolate_id of this UploadResponseError.  # noqa: E501
        :type isolate_id: str
        :param error: The error of this UploadResponseError.  # noqa: E501
        :type error: str
        """
        self.openapi_types = {
            'isolate_id': str,
            'error': str
        }

        self.attribute_map = {
            'isolate_id': 'isolate_id',
            'error': 'error'
        }

        self._isolate_id = isolate_id
        self._error = error

    @classmethod
    def from_dict(cls, dikt) -> 'UploadResponseError':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UploadResponse_error of this UploadResponseError.  # noqa: E501
        :rtype: UploadResponseError
        """
        return util.deserialize_model(dikt, cls)

    @property
    def isolate_id(self):
        """Gets the isolate_id of this UploadResponseError.


        :return: The isolate_id of this UploadResponseError.
        :rtype: str
        """
        return self._isolate_id

    @isolate_id.setter
    def isolate_id(self, isolate_id):
        """Sets the isolate_id of this UploadResponseError.


        :param isolate_id: The isolate_id of this UploadResponseError.
        :type isolate_id: str
        """

        self._isolate_id = isolate_id

    @property
    def error(self):
        """Gets the error of this UploadResponseError.


        :return: The error of this UploadResponseError.
        :rtype: str
        """
        return self._error

    @error.setter
    def error(self, error):
        """Sets the error of this UploadResponseError.


        :param error: The error of this UploadResponseError.
        :type error: str
        """

        self._error = error
