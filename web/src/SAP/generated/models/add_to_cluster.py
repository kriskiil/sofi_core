# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from web.src.SAP.generated.models.base_model_ import Model
from web.src.SAP.generated import util


class AddToCluster(Model):



    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, clusterid=None, samples=None):  # noqa: E501
        """AddToCluster - a model defined in OpenAPI

        :param clusterid: The clusterid of this AddToCluster.  # noqa: E501
        :type clusterid: str
        :param samples: The samples of this AddToCluster.  # noqa: E501
        :type samples: List[str]
        """
        self.openapi_types = {
            'clusterid': str,
            'samples': List[str],
        }

        self.attribute_map = {
            'clusterid': 'clusterid',
            'samples': 'samples',
        }

        self._clusterid = clusterid
        self._samples = samples

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AddToCluster of this AddToCluster.  # noqa: E501
        :rtype: AddToCluster
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clusterid(self):
        """Gets the clusterid of this AddToCluster.


        :return: The clusterid of this AddToCluster.
        :rtype: str
        """
        return self._clusterid

    @clusterid.setter
    def clusterid(self, clusterid):
        """Sets the clusterid of this AddToCluster.


        :param clusterid: The clusterid of this AddToCluster.
        :type clusterid: str
        """
        if clusterid is None:
            raise ValueError("Invalid value for `clusterid`, must not be `None`")  # noqa: E501

        self._clusterid = clusterid

    @property
    def samples(self):
        """Gets the samples of this AddToCluster.


        :return: The samples of this AddToCluster.
        :rtype: List[str]
        """
        return self._samples

    @samples.setter
    def samples(self, samples):
        """Sets the samples of this AddToCluster.


        :param samples: The samples of this AddToCluster.
        :type samples: List[str]
        """

        self._samples = samples
