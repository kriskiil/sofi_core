# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from web.src.SAP.generated.models.base_model_ import Model
from web.src.SAP.generated.models.phenotype import Phenotype
from web.src.SAP.generated import util

from web.src.SAP.generated.models.phenotype import Phenotype  # noqa: E501

class SampleCategoriesResistanceReport(Model):



    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, phenotypes=None):  # noqa: E501
        """SampleCategoriesResistanceReport - a model defined in OpenAPI

        :param phenotypes: The phenotypes of this SampleCategoriesResistanceReport.  # noqa: E501
        :type phenotypes: Dict[str, Phenotype]
        """
        self.openapi_types = {
            'phenotypes': Dict[str, Phenotype],
        }

        self.attribute_map = {
            'phenotypes': 'phenotypes',
        }

        self._phenotypes = phenotypes

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Sample_categories_resistance_report of this SampleCategoriesResistanceReport.  # noqa: E501
        :rtype: SampleCategoriesResistanceReport
        """
        return util.deserialize_model(dikt, cls)

    @property
    def phenotypes(self):
        """Gets the phenotypes of this SampleCategoriesResistanceReport.


        :return: The phenotypes of this SampleCategoriesResistanceReport.
        :rtype: Dict[str, Phenotype]
        """
        return self._phenotypes

    @phenotypes.setter
    def phenotypes(self, phenotypes):
        """Sets the phenotypes of this SampleCategoriesResistanceReport.


        :param phenotypes: The phenotypes of this SampleCategoriesResistanceReport.
        :type phenotypes: Dict[str, Phenotype]
        """

        self._phenotypes = phenotypes
