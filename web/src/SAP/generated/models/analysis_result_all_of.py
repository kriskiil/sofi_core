# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from web.src.SAP.generated.models.resistance import Resistance
from .. import util

from web.src.SAP.generated.models.resistance import Resistance  # noqa: E501

class AnalysisResultAllOf(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id=None, resfinder_version=None, qc_provided_species=None, qc_genome1x=None, qc_genome10x=None, qc_gsize_diff1x10=None, qc_avg_coverage=None, qc_final=None, subspecies=None, species_final=None, st=None, pathotype=None, pathotype_final=None, serotype=None, serotype_final=None, adhesion=None, adhesion_final=None, toxins=None, toxins_final=None, infection_source=None, resistance_genes=None, amr_profile=None, amr_ami=None, amr_amp=None, amr_azi=None, amr_fep=None, amr_fot=None, amr_f_c=None, amr_fox=None, amr_taz=None, amr_t_c=None, amr_chl=None, amr_cip=None, amr_cli=None, amr_col=None, amr_dap=None, amr_etp=None, amr_ery=None, amr_fus=None, amr_gen=None, amr_imi=None, amr_kan=None, amr_lzd=None, amr_mero=None, amr_mup=None, amr_nal=None, amr_pen=None, amr_syn=None, amr_rif=None, amr_str=None, amr_sul=None, amr_tei=None, amr_trm=None, amr_tet=None, amr_tia=None, amr_tgc=None, amr_tmp=None, amr_van=None):  # noqa: E501
        """AnalysisResultAllOf - a model defined in OpenAPI

        :param id: The id of this AnalysisResultAllOf.  # noqa: E501
        :type id: str
        :param resfinder_version: The resfinder_version of this AnalysisResultAllOf.  # noqa: E501
        :type resfinder_version: str
        :param qc_provided_species: The qc_provided_species of this AnalysisResultAllOf.  # noqa: E501
        :type qc_provided_species: float
        :param qc_genome1x: The qc_genome1x of this AnalysisResultAllOf.  # noqa: E501
        :type qc_genome1x: float
        :param qc_genome10x: The qc_genome10x of this AnalysisResultAllOf.  # noqa: E501
        :type qc_genome10x: float
        :param qc_gsize_diff1x10: The qc_gsize_diff1x10 of this AnalysisResultAllOf.  # noqa: E501
        :type qc_gsize_diff1x10: float
        :param qc_avg_coverage: The qc_avg_coverage of this AnalysisResultAllOf.  # noqa: E501
        :type qc_avg_coverage: float
        :param qc_final: The qc_final of this AnalysisResultAllOf.  # noqa: E501
        :type qc_final: str
        :param subspecies: The subspecies of this AnalysisResultAllOf.  # noqa: E501
        :type subspecies: str
        :param species_final: The species_final of this AnalysisResultAllOf.  # noqa: E501
        :type species_final: str
        :param st: The st of this AnalysisResultAllOf.  # noqa: E501
        :type st: str
        :param pathotype: The pathotype of this AnalysisResultAllOf.  # noqa: E501
        :type pathotype: str
        :param pathotype_final: The pathotype_final of this AnalysisResultAllOf.  # noqa: E501
        :type pathotype_final: str
        :param serotype: The serotype of this AnalysisResultAllOf.  # noqa: E501
        :type serotype: str
        :param serotype_final: The serotype_final of this AnalysisResultAllOf.  # noqa: E501
        :type serotype_final: str
        :param adhesion: The adhesion of this AnalysisResultAllOf.  # noqa: E501
        :type adhesion: str
        :param adhesion_final: The adhesion_final of this AnalysisResultAllOf.  # noqa: E501
        :type adhesion_final: str
        :param toxins: The toxins of this AnalysisResultAllOf.  # noqa: E501
        :type toxins: str
        :param toxins_final: The toxins_final of this AnalysisResultAllOf.  # noqa: E501
        :type toxins_final: str
        :param infection_source: The infection_source of this AnalysisResultAllOf.  # noqa: E501
        :type infection_source: str
        :param resistance_genes: The resistance_genes of this AnalysisResultAllOf.  # noqa: E501
        :type resistance_genes: str
        :param amr_profile: The amr_profile of this AnalysisResultAllOf.  # noqa: E501
        :type amr_profile: str
        :param amr_ami: The amr_ami of this AnalysisResultAllOf.  # noqa: E501
        :type amr_ami: Resistance
        :param amr_amp: The amr_amp of this AnalysisResultAllOf.  # noqa: E501
        :type amr_amp: Resistance
        :param amr_azi: The amr_azi of this AnalysisResultAllOf.  # noqa: E501
        :type amr_azi: Resistance
        :param amr_fep: The amr_fep of this AnalysisResultAllOf.  # noqa: E501
        :type amr_fep: Resistance
        :param amr_fot: The amr_fot of this AnalysisResultAllOf.  # noqa: E501
        :type amr_fot: Resistance
        :param amr_f_c: The amr_f_c of this AnalysisResultAllOf.  # noqa: E501
        :type amr_f_c: Resistance
        :param amr_fox: The amr_fox of this AnalysisResultAllOf.  # noqa: E501
        :type amr_fox: Resistance
        :param amr_taz: The amr_taz of this AnalysisResultAllOf.  # noqa: E501
        :type amr_taz: Resistance
        :param amr_t_c: The amr_t_c of this AnalysisResultAllOf.  # noqa: E501
        :type amr_t_c: Resistance
        :param amr_chl: The amr_chl of this AnalysisResultAllOf.  # noqa: E501
        :type amr_chl: Resistance
        :param amr_cip: The amr_cip of this AnalysisResultAllOf.  # noqa: E501
        :type amr_cip: Resistance
        :param amr_cli: The amr_cli of this AnalysisResultAllOf.  # noqa: E501
        :type amr_cli: Resistance
        :param amr_col: The amr_col of this AnalysisResultAllOf.  # noqa: E501
        :type amr_col: Resistance
        :param amr_dap: The amr_dap of this AnalysisResultAllOf.  # noqa: E501
        :type amr_dap: Resistance
        :param amr_etp: The amr_etp of this AnalysisResultAllOf.  # noqa: E501
        :type amr_etp: Resistance
        :param amr_ery: The amr_ery of this AnalysisResultAllOf.  # noqa: E501
        :type amr_ery: Resistance
        :param amr_fus: The amr_fus of this AnalysisResultAllOf.  # noqa: E501
        :type amr_fus: Resistance
        :param amr_gen: The amr_gen of this AnalysisResultAllOf.  # noqa: E501
        :type amr_gen: Resistance
        :param amr_imi: The amr_imi of this AnalysisResultAllOf.  # noqa: E501
        :type amr_imi: Resistance
        :param amr_kan: The amr_kan of this AnalysisResultAllOf.  # noqa: E501
        :type amr_kan: Resistance
        :param amr_lzd: The amr_lzd of this AnalysisResultAllOf.  # noqa: E501
        :type amr_lzd: Resistance
        :param amr_mero: The amr_mero of this AnalysisResultAllOf.  # noqa: E501
        :type amr_mero: Resistance
        :param amr_mup: The amr_mup of this AnalysisResultAllOf.  # noqa: E501
        :type amr_mup: Resistance
        :param amr_nal: The amr_nal of this AnalysisResultAllOf.  # noqa: E501
        :type amr_nal: Resistance
        :param amr_pen: The amr_pen of this AnalysisResultAllOf.  # noqa: E501
        :type amr_pen: Resistance
        :param amr_syn: The amr_syn of this AnalysisResultAllOf.  # noqa: E501
        :type amr_syn: Resistance
        :param amr_rif: The amr_rif of this AnalysisResultAllOf.  # noqa: E501
        :type amr_rif: Resistance
        :param amr_str: The amr_str of this AnalysisResultAllOf.  # noqa: E501
        :type amr_str: Resistance
        :param amr_sul: The amr_sul of this AnalysisResultAllOf.  # noqa: E501
        :type amr_sul: Resistance
        :param amr_tei: The amr_tei of this AnalysisResultAllOf.  # noqa: E501
        :type amr_tei: Resistance
        :param amr_trm: The amr_trm of this AnalysisResultAllOf.  # noqa: E501
        :type amr_trm: Resistance
        :param amr_tet: The amr_tet of this AnalysisResultAllOf.  # noqa: E501
        :type amr_tet: Resistance
        :param amr_tia: The amr_tia of this AnalysisResultAllOf.  # noqa: E501
        :type amr_tia: Resistance
        :param amr_tgc: The amr_tgc of this AnalysisResultAllOf.  # noqa: E501
        :type amr_tgc: Resistance
        :param amr_tmp: The amr_tmp of this AnalysisResultAllOf.  # noqa: E501
        :type amr_tmp: Resistance
        :param amr_van: The amr_van of this AnalysisResultAllOf.  # noqa: E501
        :type amr_van: Resistance
        """
        self.openapi_types = {
            'id': str,
            'resfinder_version': str,
            'qc_provided_species': float,
            'qc_genome1x': float,
            'qc_genome10x': float,
            'qc_gsize_diff1x10': float,
            'qc_avg_coverage': float,
            'qc_final': str,
            'subspecies': str,
            'species_final': str,
            'st': str,
            'pathotype': str,
            'pathotype_final': str,
            'serotype': str,
            'serotype_final': str,
            'adhesion': str,
            'adhesion_final': str,
            'toxins': str,
            'toxins_final': str,
            'infection_source': str,
            'resistance_genes': str,
            'amr_profile': str,
            'amr_ami': Resistance,
            'amr_amp': Resistance,
            'amr_azi': Resistance,
            'amr_fep': Resistance,
            'amr_fot': Resistance,
            'amr_f_c': Resistance,
            'amr_fox': Resistance,
            'amr_taz': Resistance,
            'amr_t_c': Resistance,
            'amr_chl': Resistance,
            'amr_cip': Resistance,
            'amr_cli': Resistance,
            'amr_col': Resistance,
            'amr_dap': Resistance,
            'amr_etp': Resistance,
            'amr_ery': Resistance,
            'amr_fus': Resistance,
            'amr_gen': Resistance,
            'amr_imi': Resistance,
            'amr_kan': Resistance,
            'amr_lzd': Resistance,
            'amr_mero': Resistance,
            'amr_mup': Resistance,
            'amr_nal': Resistance,
            'amr_pen': Resistance,
            'amr_syn': Resistance,
            'amr_rif': Resistance,
            'amr_str': Resistance,
            'amr_sul': Resistance,
            'amr_tei': Resistance,
            'amr_trm': Resistance,
            'amr_tet': Resistance,
            'amr_tia': Resistance,
            'amr_tgc': Resistance,
            'amr_tmp': Resistance,
            'amr_van': Resistance
        }

        self.attribute_map = {
            'id': '_id',
            'resfinder_version': 'resfinder_version',
            'qc_provided_species': 'qc_provided_species',
            'qc_genome1x': 'qc_genome1x',
            'qc_genome10x': 'qc_genome10x',
            'qc_gsize_diff1x10': 'qc_gsize_diff1x10',
            'qc_avg_coverage': 'qc_avg_coverage',
            'qc_final': 'qc_final',
            'subspecies': 'subspecies',
            'species_final': 'species_final',
            'st': 'st',
            'pathotype': 'pathotype',
            'pathotype_final': 'pathotype_final',
            'serotype': 'serotype',
            'serotype_final': 'serotype_final',
            'adhesion': 'adhesion',
            'adhesion_final': 'adhesion_final',
            'toxins': 'toxins',
            'toxins_final': 'toxins_final',
            'infection_source': 'infection_source',
            'resistance_genes': 'resistance_genes',
            'amr_profile': 'amr_profile',
            'amr_ami': 'amr_ami',
            'amr_amp': 'amr_amp',
            'amr_azi': 'amr_azi',
            'amr_fep': 'amr_fep',
            'amr_fot': 'amr_fot',
            'amr_f_c': 'amr_f_c',
            'amr_fox': 'amr_fox',
            'amr_taz': 'amr_taz',
            'amr_t_c': 'amr_t_c',
            'amr_chl': 'amr_chl',
            'amr_cip': 'amr_cip',
            'amr_cli': 'amr_cli',
            'amr_col': 'amr_col',
            'amr_dap': 'amr_dap',
            'amr_etp': 'amr_etp',
            'amr_ery': 'amr_ery',
            'amr_fus': 'amr_fus',
            'amr_gen': 'amr_gen',
            'amr_imi': 'amr_imi',
            'amr_kan': 'amr_kan',
            'amr_lzd': 'amr_lzd',
            'amr_mero': 'amr_mero',
            'amr_mup': 'amr_mup',
            'amr_nal': 'amr_nal',
            'amr_pen': 'amr_pen',
            'amr_syn': 'amr_syn',
            'amr_rif': 'amr_rif',
            'amr_str': 'amr_str',
            'amr_sul': 'amr_sul',
            'amr_tei': 'amr_tei',
            'amr_trm': 'amr_trm',
            'amr_tet': 'amr_tet',
            'amr_tia': 'amr_tia',
            'amr_tgc': 'amr_tgc',
            'amr_tmp': 'amr_tmp',
            'amr_van': 'amr_van'
        }

        self._id = id
        self._resfinder_version = resfinder_version
        self._qc_provided_species = qc_provided_species
        self._qc_genome1x = qc_genome1x
        self._qc_genome10x = qc_genome10x
        self._qc_gsize_diff1x10 = qc_gsize_diff1x10
        self._qc_avg_coverage = qc_avg_coverage
        self._qc_final = qc_final
        self._subspecies = subspecies
        self._species_final = species_final
        self._st = st
        self._pathotype = pathotype
        self._pathotype_final = pathotype_final
        self._serotype = serotype
        self._serotype_final = serotype_final
        self._adhesion = adhesion
        self._adhesion_final = adhesion_final
        self._toxins = toxins
        self._toxins_final = toxins_final
        self._infection_source = infection_source
        self._resistance_genes = resistance_genes
        self._amr_profile = amr_profile
        self._amr_ami = amr_ami
        self._amr_amp = amr_amp
        self._amr_azi = amr_azi
        self._amr_fep = amr_fep
        self._amr_fot = amr_fot
        self._amr_f_c = amr_f_c
        self._amr_fox = amr_fox
        self._amr_taz = amr_taz
        self._amr_t_c = amr_t_c
        self._amr_chl = amr_chl
        self._amr_cip = amr_cip
        self._amr_cli = amr_cli
        self._amr_col = amr_col
        self._amr_dap = amr_dap
        self._amr_etp = amr_etp
        self._amr_ery = amr_ery
        self._amr_fus = amr_fus
        self._amr_gen = amr_gen
        self._amr_imi = amr_imi
        self._amr_kan = amr_kan
        self._amr_lzd = amr_lzd
        self._amr_mero = amr_mero
        self._amr_mup = amr_mup
        self._amr_nal = amr_nal
        self._amr_pen = amr_pen
        self._amr_syn = amr_syn
        self._amr_rif = amr_rif
        self._amr_str = amr_str
        self._amr_sul = amr_sul
        self._amr_tei = amr_tei
        self._amr_trm = amr_trm
        self._amr_tet = amr_tet
        self._amr_tia = amr_tia
        self._amr_tgc = amr_tgc
        self._amr_tmp = amr_tmp
        self._amr_van = amr_van

    @classmethod
    def from_dict(cls, dikt) -> 'AnalysisResultAllOf':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnalysisResult_allOf of this AnalysisResultAllOf.  # noqa: E501
        :rtype: AnalysisResultAllOf
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this AnalysisResultAllOf.


        :return: The id of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AnalysisResultAllOf.


        :param id: The id of this AnalysisResultAllOf.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")  # noqa: E501

        self._id = id

    @property
    def resfinder_version(self):
        """Gets the resfinder_version of this AnalysisResultAllOf.


        :return: The resfinder_version of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._resfinder_version

    @resfinder_version.setter
    def resfinder_version(self, resfinder_version):
        """Sets the resfinder_version of this AnalysisResultAllOf.


        :param resfinder_version: The resfinder_version of this AnalysisResultAllOf.
        :type resfinder_version: str
        """

        self._resfinder_version = resfinder_version

    @property
    def qc_provided_species(self):
        """Gets the qc_provided_species of this AnalysisResultAllOf.


        :return: The qc_provided_species of this AnalysisResultAllOf.
        :rtype: float
        """
        return self._qc_provided_species

    @qc_provided_species.setter
    def qc_provided_species(self, qc_provided_species):
        """Sets the qc_provided_species of this AnalysisResultAllOf.


        :param qc_provided_species: The qc_provided_species of this AnalysisResultAllOf.
        :type qc_provided_species: float
        """

        self._qc_provided_species = qc_provided_species

    @property
    def qc_genome1x(self):
        """Gets the qc_genome1x of this AnalysisResultAllOf.


        :return: The qc_genome1x of this AnalysisResultAllOf.
        :rtype: float
        """
        return self._qc_genome1x

    @qc_genome1x.setter
    def qc_genome1x(self, qc_genome1x):
        """Sets the qc_genome1x of this AnalysisResultAllOf.


        :param qc_genome1x: The qc_genome1x of this AnalysisResultAllOf.
        :type qc_genome1x: float
        """

        self._qc_genome1x = qc_genome1x

    @property
    def qc_genome10x(self):
        """Gets the qc_genome10x of this AnalysisResultAllOf.


        :return: The qc_genome10x of this AnalysisResultAllOf.
        :rtype: float
        """
        return self._qc_genome10x

    @qc_genome10x.setter
    def qc_genome10x(self, qc_genome10x):
        """Sets the qc_genome10x of this AnalysisResultAllOf.


        :param qc_genome10x: The qc_genome10x of this AnalysisResultAllOf.
        :type qc_genome10x: float
        """

        self._qc_genome10x = qc_genome10x

    @property
    def qc_gsize_diff1x10(self):
        """Gets the qc_gsize_diff1x10 of this AnalysisResultAllOf.


        :return: The qc_gsize_diff1x10 of this AnalysisResultAllOf.
        :rtype: float
        """
        return self._qc_gsize_diff1x10

    @qc_gsize_diff1x10.setter
    def qc_gsize_diff1x10(self, qc_gsize_diff1x10):
        """Sets the qc_gsize_diff1x10 of this AnalysisResultAllOf.


        :param qc_gsize_diff1x10: The qc_gsize_diff1x10 of this AnalysisResultAllOf.
        :type qc_gsize_diff1x10: float
        """

        self._qc_gsize_diff1x10 = qc_gsize_diff1x10

    @property
    def qc_avg_coverage(self):
        """Gets the qc_avg_coverage of this AnalysisResultAllOf.


        :return: The qc_avg_coverage of this AnalysisResultAllOf.
        :rtype: float
        """
        return self._qc_avg_coverage

    @qc_avg_coverage.setter
    def qc_avg_coverage(self, qc_avg_coverage):
        """Sets the qc_avg_coverage of this AnalysisResultAllOf.


        :param qc_avg_coverage: The qc_avg_coverage of this AnalysisResultAllOf.
        :type qc_avg_coverage: float
        """

        self._qc_avg_coverage = qc_avg_coverage

    @property
    def qc_final(self):
        """Gets the qc_final of this AnalysisResultAllOf.


        :return: The qc_final of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._qc_final

    @qc_final.setter
    def qc_final(self, qc_final):
        """Sets the qc_final of this AnalysisResultAllOf.


        :param qc_final: The qc_final of this AnalysisResultAllOf.
        :type qc_final: str
        """
        allowed_values = ["A", "B", "C"]  # noqa: E501
        if qc_final not in allowed_values:
            raise ValueError(
                "Invalid value for `qc_final` ({0}), must be one of {1}"
                .format(qc_final, allowed_values)
            )

        self._qc_final = qc_final

    @property
    def subspecies(self):
        """Gets the subspecies of this AnalysisResultAllOf.


        :return: The subspecies of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._subspecies

    @subspecies.setter
    def subspecies(self, subspecies):
        """Sets the subspecies of this AnalysisResultAllOf.


        :param subspecies: The subspecies of this AnalysisResultAllOf.
        :type subspecies: str
        """

        self._subspecies = subspecies

    @property
    def species_final(self):
        """Gets the species_final of this AnalysisResultAllOf.


        :return: The species_final of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._species_final

    @species_final.setter
    def species_final(self, species_final):
        """Sets the species_final of this AnalysisResultAllOf.


        :param species_final: The species_final of this AnalysisResultAllOf.
        :type species_final: str
        """

        self._species_final = species_final

    @property
    def st(self):
        """Gets the st of this AnalysisResultAllOf.


        :return: The st of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._st

    @st.setter
    def st(self, st):
        """Sets the st of this AnalysisResultAllOf.


        :param st: The st of this AnalysisResultAllOf.
        :type st: str
        """

        self._st = st

    @property
    def pathotype(self):
        """Gets the pathotype of this AnalysisResultAllOf.


        :return: The pathotype of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._pathotype

    @pathotype.setter
    def pathotype(self, pathotype):
        """Sets the pathotype of this AnalysisResultAllOf.


        :param pathotype: The pathotype of this AnalysisResultAllOf.
        :type pathotype: str
        """

        self._pathotype = pathotype

    @property
    def pathotype_final(self):
        """Gets the pathotype_final of this AnalysisResultAllOf.


        :return: The pathotype_final of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._pathotype_final

    @pathotype_final.setter
    def pathotype_final(self, pathotype_final):
        """Sets the pathotype_final of this AnalysisResultAllOf.


        :param pathotype_final: The pathotype_final of this AnalysisResultAllOf.
        :type pathotype_final: str
        """

        self._pathotype_final = pathotype_final

    @property
    def serotype(self):
        """Gets the serotype of this AnalysisResultAllOf.


        :return: The serotype of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._serotype

    @serotype.setter
    def serotype(self, serotype):
        """Sets the serotype of this AnalysisResultAllOf.


        :param serotype: The serotype of this AnalysisResultAllOf.
        :type serotype: str
        """

        self._serotype = serotype

    @property
    def serotype_final(self):
        """Gets the serotype_final of this AnalysisResultAllOf.


        :return: The serotype_final of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._serotype_final

    @serotype_final.setter
    def serotype_final(self, serotype_final):
        """Sets the serotype_final of this AnalysisResultAllOf.


        :param serotype_final: The serotype_final of this AnalysisResultAllOf.
        :type serotype_final: str
        """

        self._serotype_final = serotype_final

    @property
    def adhesion(self):
        """Gets the adhesion of this AnalysisResultAllOf.


        :return: The adhesion of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._adhesion

    @adhesion.setter
    def adhesion(self, adhesion):
        """Sets the adhesion of this AnalysisResultAllOf.


        :param adhesion: The adhesion of this AnalysisResultAllOf.
        :type adhesion: str
        """

        self._adhesion = adhesion

    @property
    def adhesion_final(self):
        """Gets the adhesion_final of this AnalysisResultAllOf.


        :return: The adhesion_final of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._adhesion_final

    @adhesion_final.setter
    def adhesion_final(self, adhesion_final):
        """Sets the adhesion_final of this AnalysisResultAllOf.


        :param adhesion_final: The adhesion_final of this AnalysisResultAllOf.
        :type adhesion_final: str
        """

        self._adhesion_final = adhesion_final

    @property
    def toxins(self):
        """Gets the toxins of this AnalysisResultAllOf.


        :return: The toxins of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._toxins

    @toxins.setter
    def toxins(self, toxins):
        """Sets the toxins of this AnalysisResultAllOf.


        :param toxins: The toxins of this AnalysisResultAllOf.
        :type toxins: str
        """

        self._toxins = toxins

    @property
    def toxins_final(self):
        """Gets the toxins_final of this AnalysisResultAllOf.


        :return: The toxins_final of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._toxins_final

    @toxins_final.setter
    def toxins_final(self, toxins_final):
        """Sets the toxins_final of this AnalysisResultAllOf.


        :param toxins_final: The toxins_final of this AnalysisResultAllOf.
        :type toxins_final: str
        """

        self._toxins_final = toxins_final

    @property
    def infection_source(self):
        """Gets the infection_source of this AnalysisResultAllOf.


        :return: The infection_source of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._infection_source

    @infection_source.setter
    def infection_source(self, infection_source):
        """Sets the infection_source of this AnalysisResultAllOf.


        :param infection_source: The infection_source of this AnalysisResultAllOf.
        :type infection_source: str
        """

        self._infection_source = infection_source

    @property
    def resistance_genes(self):
        """Gets the resistance_genes of this AnalysisResultAllOf.


        :return: The resistance_genes of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._resistance_genes

    @resistance_genes.setter
    def resistance_genes(self, resistance_genes):
        """Sets the resistance_genes of this AnalysisResultAllOf.


        :param resistance_genes: The resistance_genes of this AnalysisResultAllOf.
        :type resistance_genes: str
        """

        self._resistance_genes = resistance_genes

    @property
    def amr_profile(self):
        """Gets the amr_profile of this AnalysisResultAllOf.


        :return: The amr_profile of this AnalysisResultAllOf.
        :rtype: str
        """
        return self._amr_profile

    @amr_profile.setter
    def amr_profile(self, amr_profile):
        """Sets the amr_profile of this AnalysisResultAllOf.


        :param amr_profile: The amr_profile of this AnalysisResultAllOf.
        :type amr_profile: str
        """

        self._amr_profile = amr_profile

    @property
    def amr_ami(self):
        """Gets the amr_ami of this AnalysisResultAllOf.


        :return: The amr_ami of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_ami

    @amr_ami.setter
    def amr_ami(self, amr_ami):
        """Sets the amr_ami of this AnalysisResultAllOf.


        :param amr_ami: The amr_ami of this AnalysisResultAllOf.
        :type amr_ami: Resistance
        """

        self._amr_ami = amr_ami

    @property
    def amr_amp(self):
        """Gets the amr_amp of this AnalysisResultAllOf.


        :return: The amr_amp of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_amp

    @amr_amp.setter
    def amr_amp(self, amr_amp):
        """Sets the amr_amp of this AnalysisResultAllOf.


        :param amr_amp: The amr_amp of this AnalysisResultAllOf.
        :type amr_amp: Resistance
        """

        self._amr_amp = amr_amp

    @property
    def amr_azi(self):
        """Gets the amr_azi of this AnalysisResultAllOf.


        :return: The amr_azi of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_azi

    @amr_azi.setter
    def amr_azi(self, amr_azi):
        """Sets the amr_azi of this AnalysisResultAllOf.


        :param amr_azi: The amr_azi of this AnalysisResultAllOf.
        :type amr_azi: Resistance
        """

        self._amr_azi = amr_azi

    @property
    def amr_fep(self):
        """Gets the amr_fep of this AnalysisResultAllOf.


        :return: The amr_fep of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_fep

    @amr_fep.setter
    def amr_fep(self, amr_fep):
        """Sets the amr_fep of this AnalysisResultAllOf.


        :param amr_fep: The amr_fep of this AnalysisResultAllOf.
        :type amr_fep: Resistance
        """

        self._amr_fep = amr_fep

    @property
    def amr_fot(self):
        """Gets the amr_fot of this AnalysisResultAllOf.


        :return: The amr_fot of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_fot

    @amr_fot.setter
    def amr_fot(self, amr_fot):
        """Sets the amr_fot of this AnalysisResultAllOf.


        :param amr_fot: The amr_fot of this AnalysisResultAllOf.
        :type amr_fot: Resistance
        """

        self._amr_fot = amr_fot

    @property
    def amr_f_c(self):
        """Gets the amr_f_c of this AnalysisResultAllOf.


        :return: The amr_f_c of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_f_c

    @amr_f_c.setter
    def amr_f_c(self, amr_f_c):
        """Sets the amr_f_c of this AnalysisResultAllOf.


        :param amr_f_c: The amr_f_c of this AnalysisResultAllOf.
        :type amr_f_c: Resistance
        """

        self._amr_f_c = amr_f_c

    @property
    def amr_fox(self):
        """Gets the amr_fox of this AnalysisResultAllOf.


        :return: The amr_fox of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_fox

    @amr_fox.setter
    def amr_fox(self, amr_fox):
        """Sets the amr_fox of this AnalysisResultAllOf.


        :param amr_fox: The amr_fox of this AnalysisResultAllOf.
        :type amr_fox: Resistance
        """

        self._amr_fox = amr_fox

    @property
    def amr_taz(self):
        """Gets the amr_taz of this AnalysisResultAllOf.


        :return: The amr_taz of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_taz

    @amr_taz.setter
    def amr_taz(self, amr_taz):
        """Sets the amr_taz of this AnalysisResultAllOf.


        :param amr_taz: The amr_taz of this AnalysisResultAllOf.
        :type amr_taz: Resistance
        """

        self._amr_taz = amr_taz

    @property
    def amr_t_c(self):
        """Gets the amr_t_c of this AnalysisResultAllOf.


        :return: The amr_t_c of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_t_c

    @amr_t_c.setter
    def amr_t_c(self, amr_t_c):
        """Sets the amr_t_c of this AnalysisResultAllOf.


        :param amr_t_c: The amr_t_c of this AnalysisResultAllOf.
        :type amr_t_c: Resistance
        """

        self._amr_t_c = amr_t_c

    @property
    def amr_chl(self):
        """Gets the amr_chl of this AnalysisResultAllOf.


        :return: The amr_chl of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_chl

    @amr_chl.setter
    def amr_chl(self, amr_chl):
        """Sets the amr_chl of this AnalysisResultAllOf.


        :param amr_chl: The amr_chl of this AnalysisResultAllOf.
        :type amr_chl: Resistance
        """

        self._amr_chl = amr_chl

    @property
    def amr_cip(self):
        """Gets the amr_cip of this AnalysisResultAllOf.


        :return: The amr_cip of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_cip

    @amr_cip.setter
    def amr_cip(self, amr_cip):
        """Sets the amr_cip of this AnalysisResultAllOf.


        :param amr_cip: The amr_cip of this AnalysisResultAllOf.
        :type amr_cip: Resistance
        """

        self._amr_cip = amr_cip

    @property
    def amr_cli(self):
        """Gets the amr_cli of this AnalysisResultAllOf.


        :return: The amr_cli of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_cli

    @amr_cli.setter
    def amr_cli(self, amr_cli):
        """Sets the amr_cli of this AnalysisResultAllOf.


        :param amr_cli: The amr_cli of this AnalysisResultAllOf.
        :type amr_cli: Resistance
        """

        self._amr_cli = amr_cli

    @property
    def amr_col(self):
        """Gets the amr_col of this AnalysisResultAllOf.


        :return: The amr_col of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_col

    @amr_col.setter
    def amr_col(self, amr_col):
        """Sets the amr_col of this AnalysisResultAllOf.


        :param amr_col: The amr_col of this AnalysisResultAllOf.
        :type amr_col: Resistance
        """

        self._amr_col = amr_col

    @property
    def amr_dap(self):
        """Gets the amr_dap of this AnalysisResultAllOf.


        :return: The amr_dap of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_dap

    @amr_dap.setter
    def amr_dap(self, amr_dap):
        """Sets the amr_dap of this AnalysisResultAllOf.


        :param amr_dap: The amr_dap of this AnalysisResultAllOf.
        :type amr_dap: Resistance
        """

        self._amr_dap = amr_dap

    @property
    def amr_etp(self):
        """Gets the amr_etp of this AnalysisResultAllOf.


        :return: The amr_etp of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_etp

    @amr_etp.setter
    def amr_etp(self, amr_etp):
        """Sets the amr_etp of this AnalysisResultAllOf.


        :param amr_etp: The amr_etp of this AnalysisResultAllOf.
        :type amr_etp: Resistance
        """

        self._amr_etp = amr_etp

    @property
    def amr_ery(self):
        """Gets the amr_ery of this AnalysisResultAllOf.


        :return: The amr_ery of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_ery

    @amr_ery.setter
    def amr_ery(self, amr_ery):
        """Sets the amr_ery of this AnalysisResultAllOf.


        :param amr_ery: The amr_ery of this AnalysisResultAllOf.
        :type amr_ery: Resistance
        """

        self._amr_ery = amr_ery

    @property
    def amr_fus(self):
        """Gets the amr_fus of this AnalysisResultAllOf.


        :return: The amr_fus of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_fus

    @amr_fus.setter
    def amr_fus(self, amr_fus):
        """Sets the amr_fus of this AnalysisResultAllOf.


        :param amr_fus: The amr_fus of this AnalysisResultAllOf.
        :type amr_fus: Resistance
        """

        self._amr_fus = amr_fus

    @property
    def amr_gen(self):
        """Gets the amr_gen of this AnalysisResultAllOf.


        :return: The amr_gen of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_gen

    @amr_gen.setter
    def amr_gen(self, amr_gen):
        """Sets the amr_gen of this AnalysisResultAllOf.


        :param amr_gen: The amr_gen of this AnalysisResultAllOf.
        :type amr_gen: Resistance
        """

        self._amr_gen = amr_gen

    @property
    def amr_imi(self):
        """Gets the amr_imi of this AnalysisResultAllOf.


        :return: The amr_imi of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_imi

    @amr_imi.setter
    def amr_imi(self, amr_imi):
        """Sets the amr_imi of this AnalysisResultAllOf.


        :param amr_imi: The amr_imi of this AnalysisResultAllOf.
        :type amr_imi: Resistance
        """

        self._amr_imi = amr_imi

    @property
    def amr_kan(self):
        """Gets the amr_kan of this AnalysisResultAllOf.


        :return: The amr_kan of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_kan

    @amr_kan.setter
    def amr_kan(self, amr_kan):
        """Sets the amr_kan of this AnalysisResultAllOf.


        :param amr_kan: The amr_kan of this AnalysisResultAllOf.
        :type amr_kan: Resistance
        """

        self._amr_kan = amr_kan

    @property
    def amr_lzd(self):
        """Gets the amr_lzd of this AnalysisResultAllOf.


        :return: The amr_lzd of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_lzd

    @amr_lzd.setter
    def amr_lzd(self, amr_lzd):
        """Sets the amr_lzd of this AnalysisResultAllOf.


        :param amr_lzd: The amr_lzd of this AnalysisResultAllOf.
        :type amr_lzd: Resistance
        """

        self._amr_lzd = amr_lzd

    @property
    def amr_mero(self):
        """Gets the amr_mero of this AnalysisResultAllOf.


        :return: The amr_mero of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_mero

    @amr_mero.setter
    def amr_mero(self, amr_mero):
        """Sets the amr_mero of this AnalysisResultAllOf.


        :param amr_mero: The amr_mero of this AnalysisResultAllOf.
        :type amr_mero: Resistance
        """

        self._amr_mero = amr_mero

    @property
    def amr_mup(self):
        """Gets the amr_mup of this AnalysisResultAllOf.


        :return: The amr_mup of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_mup

    @amr_mup.setter
    def amr_mup(self, amr_mup):
        """Sets the amr_mup of this AnalysisResultAllOf.


        :param amr_mup: The amr_mup of this AnalysisResultAllOf.
        :type amr_mup: Resistance
        """

        self._amr_mup = amr_mup

    @property
    def amr_nal(self):
        """Gets the amr_nal of this AnalysisResultAllOf.


        :return: The amr_nal of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_nal

    @amr_nal.setter
    def amr_nal(self, amr_nal):
        """Sets the amr_nal of this AnalysisResultAllOf.


        :param amr_nal: The amr_nal of this AnalysisResultAllOf.
        :type amr_nal: Resistance
        """

        self._amr_nal = amr_nal

    @property
    def amr_pen(self):
        """Gets the amr_pen of this AnalysisResultAllOf.


        :return: The amr_pen of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_pen

    @amr_pen.setter
    def amr_pen(self, amr_pen):
        """Sets the amr_pen of this AnalysisResultAllOf.


        :param amr_pen: The amr_pen of this AnalysisResultAllOf.
        :type amr_pen: Resistance
        """

        self._amr_pen = amr_pen

    @property
    def amr_syn(self):
        """Gets the amr_syn of this AnalysisResultAllOf.


        :return: The amr_syn of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_syn

    @amr_syn.setter
    def amr_syn(self, amr_syn):
        """Sets the amr_syn of this AnalysisResultAllOf.


        :param amr_syn: The amr_syn of this AnalysisResultAllOf.
        :type amr_syn: Resistance
        """

        self._amr_syn = amr_syn

    @property
    def amr_rif(self):
        """Gets the amr_rif of this AnalysisResultAllOf.


        :return: The amr_rif of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_rif

    @amr_rif.setter
    def amr_rif(self, amr_rif):
        """Sets the amr_rif of this AnalysisResultAllOf.


        :param amr_rif: The amr_rif of this AnalysisResultAllOf.
        :type amr_rif: Resistance
        """

        self._amr_rif = amr_rif

    @property
    def amr_str(self):
        """Gets the amr_str of this AnalysisResultAllOf.


        :return: The amr_str of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_str

    @amr_str.setter
    def amr_str(self, amr_str):
        """Sets the amr_str of this AnalysisResultAllOf.


        :param amr_str: The amr_str of this AnalysisResultAllOf.
        :type amr_str: Resistance
        """

        self._amr_str = amr_str

    @property
    def amr_sul(self):
        """Gets the amr_sul of this AnalysisResultAllOf.


        :return: The amr_sul of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_sul

    @amr_sul.setter
    def amr_sul(self, amr_sul):
        """Sets the amr_sul of this AnalysisResultAllOf.


        :param amr_sul: The amr_sul of this AnalysisResultAllOf.
        :type amr_sul: Resistance
        """

        self._amr_sul = amr_sul

    @property
    def amr_tei(self):
        """Gets the amr_tei of this AnalysisResultAllOf.


        :return: The amr_tei of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_tei

    @amr_tei.setter
    def amr_tei(self, amr_tei):
        """Sets the amr_tei of this AnalysisResultAllOf.


        :param amr_tei: The amr_tei of this AnalysisResultAllOf.
        :type amr_tei: Resistance
        """

        self._amr_tei = amr_tei

    @property
    def amr_trm(self):
        """Gets the amr_trm of this AnalysisResultAllOf.


        :return: The amr_trm of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_trm

    @amr_trm.setter
    def amr_trm(self, amr_trm):
        """Sets the amr_trm of this AnalysisResultAllOf.


        :param amr_trm: The amr_trm of this AnalysisResultAllOf.
        :type amr_trm: Resistance
        """

        self._amr_trm = amr_trm

    @property
    def amr_tet(self):
        """Gets the amr_tet of this AnalysisResultAllOf.


        :return: The amr_tet of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_tet

    @amr_tet.setter
    def amr_tet(self, amr_tet):
        """Sets the amr_tet of this AnalysisResultAllOf.


        :param amr_tet: The amr_tet of this AnalysisResultAllOf.
        :type amr_tet: Resistance
        """

        self._amr_tet = amr_tet

    @property
    def amr_tia(self):
        """Gets the amr_tia of this AnalysisResultAllOf.


        :return: The amr_tia of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_tia

    @amr_tia.setter
    def amr_tia(self, amr_tia):
        """Sets the amr_tia of this AnalysisResultAllOf.


        :param amr_tia: The amr_tia of this AnalysisResultAllOf.
        :type amr_tia: Resistance
        """

        self._amr_tia = amr_tia

    @property
    def amr_tgc(self):
        """Gets the amr_tgc of this AnalysisResultAllOf.


        :return: The amr_tgc of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_tgc

    @amr_tgc.setter
    def amr_tgc(self, amr_tgc):
        """Sets the amr_tgc of this AnalysisResultAllOf.


        :param amr_tgc: The amr_tgc of this AnalysisResultAllOf.
        :type amr_tgc: Resistance
        """

        self._amr_tgc = amr_tgc

    @property
    def amr_tmp(self):
        """Gets the amr_tmp of this AnalysisResultAllOf.


        :return: The amr_tmp of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_tmp

    @amr_tmp.setter
    def amr_tmp(self, amr_tmp):
        """Sets the amr_tmp of this AnalysisResultAllOf.


        :param amr_tmp: The amr_tmp of this AnalysisResultAllOf.
        :type amr_tmp: Resistance
        """

        self._amr_tmp = amr_tmp

    @property
    def amr_van(self):
        """Gets the amr_van of this AnalysisResultAllOf.


        :return: The amr_van of this AnalysisResultAllOf.
        :rtype: Resistance
        """
        return self._amr_van

    @amr_van.setter
    def amr_van(self, amr_van):
        """Sets the amr_van of this AnalysisResultAllOf.


        :param amr_van: The amr_van of this AnalysisResultAllOf.
        :type amr_van: Resistance
        """

        self._amr_van = amr_van
