# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from .. import util


class BulkUploadRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, path=None, metadata_tsv=None):  # noqa: E501
        """BulkUploadRequest - a model defined in OpenAPI

        :param path: The path of this BulkUploadRequest.  # noqa: E501
        :type path: str
        :param metadata_tsv: The metadata_tsv of this BulkUploadRequest.  # noqa: E501
        :type metadata_tsv: file
        """
        self.openapi_types = {
            'path': str,
            'metadata_tsv': file
        }

        self.attribute_map = {
            'path': 'path',
            'metadata_tsv': 'metadata_tsv'
        }

        self._path = path
        self._metadata_tsv = metadata_tsv

    @classmethod
    def from_dict(cls, dikt) -> 'BulkUploadRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The BulkUploadRequest of this BulkUploadRequest.  # noqa: E501
        :rtype: BulkUploadRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def path(self):
        """Gets the path of this BulkUploadRequest.


        :return: The path of this BulkUploadRequest.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this BulkUploadRequest.


        :param path: The path of this BulkUploadRequest.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")  # noqa: E501

        self._path = path

    @property
    def metadata_tsv(self):
        """Gets the metadata_tsv of this BulkUploadRequest.


        :return: The metadata_tsv of this BulkUploadRequest.
        :rtype: file
        """
        return self._metadata_tsv

    @metadata_tsv.setter
    def metadata_tsv(self, metadata_tsv):
        """Sets the metadata_tsv of this BulkUploadRequest.


        :param metadata_tsv: The metadata_tsv of this BulkUploadRequest.
        :type metadata_tsv: file
        """
        if metadata_tsv is None:
            raise ValueError("Invalid value for `metadata_tsv`, must not be `None`")  # noqa: E501

        self._metadata_tsv = metadata_tsv
