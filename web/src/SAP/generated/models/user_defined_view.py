# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from web.src.SAP.generated.models.user_defined_view_table_state import UserDefinedViewTableState
from .. import util

from web.src.SAP.generated.models.user_defined_view_table_state import UserDefinedViewTableState  # noqa: E501

class UserDefinedView(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name=None, table_state=None):  # noqa: E501
        """UserDefinedView - a model defined in OpenAPI

        :param name: The name of this UserDefinedView.  # noqa: E501
        :type name: str
        :param table_state: The table_state of this UserDefinedView.  # noqa: E501
        :type table_state: UserDefinedViewTableState
        """
        self.openapi_types = {
            'name': str,
            'table_state': UserDefinedViewTableState
        }

        self.attribute_map = {
            'name': 'name',
            'table_state': 'tableState'
        }

        self._name = name
        self._table_state = table_state

    @classmethod
    def from_dict(cls, dikt) -> 'UserDefinedView':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserDefinedView of this UserDefinedView.  # noqa: E501
        :rtype: UserDefinedView
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UserDefinedView.


        :return: The name of this UserDefinedView.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserDefinedView.


        :param name: The name of this UserDefinedView.
        :type name: str
        """

        self._name = name

    @property
    def table_state(self):
        """Gets the table_state of this UserDefinedView.


        :return: The table_state of this UserDefinedView.
        :rtype: UserDefinedViewTableState
        """
        return self._table_state

    @table_state.setter
    def table_state(self, table_state):
        """Sets the table_state of this UserDefinedView.


        :param table_state: The table_state of this UserDefinedView.
        :type table_state: UserDefinedViewTableState
        """

        self._table_state = table_state
