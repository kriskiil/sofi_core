# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from web.src.SAP.generated.models.base_model_ import Model
from web.src.SAP.generated.models.user_defined_view_column_resizing import UserDefinedViewColumnResizing
from web.src.SAP.generated.models.user_defined_view_sort_by import UserDefinedViewSortBy
from web.src.SAP.generated import util

from web.src.SAP.generated.models.user_defined_view_column_resizing import UserDefinedViewColumnResizing  # noqa: E501
from web.src.SAP.generated.models.user_defined_view_sort_by import UserDefinedViewSortBy  # noqa: E501

class UserDefinedView(Model):



    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, name=None, hidden_columns=None, column_resizing=None, sort_by=None, column_order=None):  # noqa: E501
        """UserDefinedView - a model defined in OpenAPI

        :param name: The name of this UserDefinedView.  # noqa: E501
        :type name: str
        :param hidden_columns: The hidden_columns of this UserDefinedView.  # noqa: E501
        :type hidden_columns: List[str]
        :param column_resizing: The column_resizing of this UserDefinedView.  # noqa: E501
        :type column_resizing: UserDefinedViewColumnResizing
        :param sort_by: The sort_by of this UserDefinedView.  # noqa: E501
        :type sort_by: List[UserDefinedViewSortBy]
        :param column_order: The column_order of this UserDefinedView.  # noqa: E501
        :type column_order: List[str]
        """
        self.openapi_types = {
            'name': str,
            'hidden_columns': List[str],
            'column_resizing': UserDefinedViewColumnResizing,
            'sort_by': List[UserDefinedViewSortBy],
            'column_order': List[str],
        }

        self.attribute_map = {
            'name': 'name',
            'hidden_columns': 'hidden_columns',
            'column_resizing': 'column_resizing',
            'sort_by': 'sort_by',
            'column_order': 'column_order',
        }

        self._name = name
        self._hidden_columns = hidden_columns
        self._column_resizing = column_resizing
        self._sort_by = sort_by
        self._column_order = column_order

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserDefinedView of this UserDefinedView.  # noqa: E501
        :rtype: UserDefinedView
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this UserDefinedView.


        :return: The name of this UserDefinedView.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UserDefinedView.


        :param name: The name of this UserDefinedView.
        :type name: str
        """

        self._name = name

    @property
    def hidden_columns(self):
        """Gets the hidden_columns of this UserDefinedView.


        :return: The hidden_columns of this UserDefinedView.
        :rtype: List[str]
        """
        return self._hidden_columns

    @hidden_columns.setter
    def hidden_columns(self, hidden_columns):
        """Sets the hidden_columns of this UserDefinedView.


        :param hidden_columns: The hidden_columns of this UserDefinedView.
        :type hidden_columns: List[str]
        """

        self._hidden_columns = hidden_columns

    @property
    def column_resizing(self):
        """Gets the column_resizing of this UserDefinedView.


        :return: The column_resizing of this UserDefinedView.
        :rtype: UserDefinedViewColumnResizing
        """
        return self._column_resizing

    @column_resizing.setter
    def column_resizing(self, column_resizing):
        """Sets the column_resizing of this UserDefinedView.


        :param column_resizing: The column_resizing of this UserDefinedView.
        :type column_resizing: UserDefinedViewColumnResizing
        """

        self._column_resizing = column_resizing

    @property
    def sort_by(self):
        """Gets the sort_by of this UserDefinedView.


        :return: The sort_by of this UserDefinedView.
        :rtype: List[UserDefinedViewSortBy]
        """
        return self._sort_by

    @sort_by.setter
    def sort_by(self, sort_by):
        """Sets the sort_by of this UserDefinedView.


        :param sort_by: The sort_by of this UserDefinedView.
        :type sort_by: List[UserDefinedViewSortBy]
        """

        self._sort_by = sort_by

    @property
    def column_order(self):
        """Gets the column_order of this UserDefinedView.


        :return: The column_order of this UserDefinedView.
        :rtype: List[str]
        """
        return self._column_order

    @column_order.setter
    def column_order(self, column_order):
        """Sets the column_order of this UserDefinedView.


        :param column_order: The column_order of this UserDefinedView.
        :type column_order: List[str]
        """

        self._column_order = column_order
