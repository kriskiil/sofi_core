# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from web.src.SAP.generated.models.base_model_ import Model
from web.src.SAP.generated import util


class NewMicroreactProjectResponse(Model):



    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, is_owner=None, id=None, url=None):  # noqa: E501
        """NewMicroreactProjectResponse - a model defined in OpenAPI

        :param is_owner: The is_owner of this NewMicroreactProjectResponse.  # noqa: E501
        :type is_owner: bool
        :param id: The id of this NewMicroreactProjectResponse.  # noqa: E501
        :type id: str
        :param url: The url of this NewMicroreactProjectResponse.  # noqa: E501
        :type url: str
        """
        self.openapi_types = {
            'is_owner': bool,
            'id': str,
            'url': str,
        }

        self.attribute_map = {
            'is_owner': 'isOwner',
            'id': 'id',
            'url': 'url',
        }

        self._is_owner = is_owner
        self._id = id
        self._url = url

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NewMicroreactProjectResponse of this NewMicroreactProjectResponse.  # noqa: E501
        :rtype: NewMicroreactProjectResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_owner(self):
        """Gets the is_owner of this NewMicroreactProjectResponse.


        :return: The is_owner of this NewMicroreactProjectResponse.
        :rtype: bool
        """
        return self._is_owner

    @is_owner.setter
    def is_owner(self, is_owner):
        """Sets the is_owner of this NewMicroreactProjectResponse.


        :param is_owner: The is_owner of this NewMicroreactProjectResponse.
        :type is_owner: bool
        """

        self._is_owner = is_owner

    @property
    def id(self):
        """Gets the id of this NewMicroreactProjectResponse.


        :return: The id of this NewMicroreactProjectResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this NewMicroreactProjectResponse.


        :param id: The id of this NewMicroreactProjectResponse.
        :type id: str
        """

        self._id = id

    @property
    def url(self):
        """Gets the url of this NewMicroreactProjectResponse.


        :return: The url of this NewMicroreactProjectResponse.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NewMicroreactProjectResponse.


        :param url: The url of this NewMicroreactProjectResponse.
        :type url: str
        """

        self._url = url
