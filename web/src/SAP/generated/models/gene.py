# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from web.src.SAP.generated.models.base_model_ import Model
from web.src.SAP.generated import util


class Gene(Model):



    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, gene_id=None, identity=None, ref_seq_length=None, alignment_length=None, phenotypes=None, depth=None, contig=None, contig_start_pos=None, contig_end_pos=None, notes=None, pmids=None, ref_acc=None):  # noqa: E501
        """Gene - a model defined in OpenAPI

        :param gene_id: The gene_id of this Gene.  # noqa: E501
        :type gene_id: str
        :param identity: The identity of this Gene.  # noqa: E501
        :type identity: float
        :param ref_seq_length: The ref_seq_length of this Gene.  # noqa: E501
        :type ref_seq_length: float
        :param alignment_length: The alignment_length of this Gene.  # noqa: E501
        :type alignment_length: float
        :param phenotypes: The phenotypes of this Gene.  # noqa: E501
        :type phenotypes: List[str]
        :param depth: The depth of this Gene.  # noqa: E501
        :type depth: float
        :param contig: The contig of this Gene.  # noqa: E501
        :type contig: str
        :param contig_start_pos: The contig_start_pos of this Gene.  # noqa: E501
        :type contig_start_pos: float
        :param contig_end_pos: The contig_end_pos of this Gene.  # noqa: E501
        :type contig_end_pos: float
        :param notes: The notes of this Gene.  # noqa: E501
        :type notes: List[str]
        :param pmids: The pmids of this Gene.  # noqa: E501
        :type pmids: List[str]
        :param ref_acc: The ref_acc of this Gene.  # noqa: E501
        :type ref_acc: str
        """
        self.openapi_types = {
            'gene_id': str,
            'identity': float,
            'ref_seq_length': float,
            'alignment_length': float,
            'phenotypes': List[str],
            'depth': float,
            'contig': str,
            'contig_start_pos': float,
            'contig_end_pos': float,
            'notes': List[str],
            'pmids': List[str],
            'ref_acc': str,
        }

        self.attribute_map = {
            'gene_id': 'gene_id',
            'identity': 'identity',
            'ref_seq_length': 'ref_seq_length',
            'alignment_length': 'alignment_length',
            'phenotypes': 'phenotypes',
            'depth': 'depth',
            'contig': 'contig',
            'contig_start_pos': 'contig_start_pos',
            'contig_end_pos': 'contig_end_pos',
            'notes': 'notes',
            'pmids': 'pmids',
            'ref_acc': 'ref_acc',
        }

        self._gene_id = gene_id
        self._identity = identity
        self._ref_seq_length = ref_seq_length
        self._alignment_length = alignment_length
        self._phenotypes = phenotypes
        self._depth = depth
        self._contig = contig
        self._contig_start_pos = contig_start_pos
        self._contig_end_pos = contig_end_pos
        self._notes = notes
        self._pmids = pmids
        self._ref_acc = ref_acc

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Gene of this Gene.  # noqa: E501
        :rtype: Gene
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gene_id(self):
        """Gets the gene_id of this Gene.


        :return: The gene_id of this Gene.
        :rtype: str
        """
        return self._gene_id

    @gene_id.setter
    def gene_id(self, gene_id):
        """Sets the gene_id of this Gene.


        :param gene_id: The gene_id of this Gene.
        :type gene_id: str
        """

        self._gene_id = gene_id

    @property
    def identity(self):
        """Gets the identity of this Gene.


        :return: The identity of this Gene.
        :rtype: float
        """
        return self._identity

    @identity.setter
    def identity(self, identity):
        """Sets the identity of this Gene.


        :param identity: The identity of this Gene.
        :type identity: float
        """

        self._identity = identity

    @property
    def ref_seq_length(self):
        """Gets the ref_seq_length of this Gene.


        :return: The ref_seq_length of this Gene.
        :rtype: float
        """
        return self._ref_seq_length

    @ref_seq_length.setter
    def ref_seq_length(self, ref_seq_length):
        """Sets the ref_seq_length of this Gene.


        :param ref_seq_length: The ref_seq_length of this Gene.
        :type ref_seq_length: float
        """

        self._ref_seq_length = ref_seq_length

    @property
    def alignment_length(self):
        """Gets the alignment_length of this Gene.


        :return: The alignment_length of this Gene.
        :rtype: float
        """
        return self._alignment_length

    @alignment_length.setter
    def alignment_length(self, alignment_length):
        """Sets the alignment_length of this Gene.


        :param alignment_length: The alignment_length of this Gene.
        :type alignment_length: float
        """

        self._alignment_length = alignment_length

    @property
    def phenotypes(self):
        """Gets the phenotypes of this Gene.


        :return: The phenotypes of this Gene.
        :rtype: List[str]
        """
        return self._phenotypes

    @phenotypes.setter
    def phenotypes(self, phenotypes):
        """Sets the phenotypes of this Gene.


        :param phenotypes: The phenotypes of this Gene.
        :type phenotypes: List[str]
        """

        self._phenotypes = phenotypes

    @property
    def depth(self):
        """Gets the depth of this Gene.


        :return: The depth of this Gene.
        :rtype: float
        """
        return self._depth

    @depth.setter
    def depth(self, depth):
        """Sets the depth of this Gene.


        :param depth: The depth of this Gene.
        :type depth: float
        """

        self._depth = depth

    @property
    def contig(self):
        """Gets the contig of this Gene.


        :return: The contig of this Gene.
        :rtype: str
        """
        return self._contig

    @contig.setter
    def contig(self, contig):
        """Sets the contig of this Gene.


        :param contig: The contig of this Gene.
        :type contig: str
        """

        self._contig = contig

    @property
    def contig_start_pos(self):
        """Gets the contig_start_pos of this Gene.


        :return: The contig_start_pos of this Gene.
        :rtype: float
        """
        return self._contig_start_pos

    @contig_start_pos.setter
    def contig_start_pos(self, contig_start_pos):
        """Sets the contig_start_pos of this Gene.


        :param contig_start_pos: The contig_start_pos of this Gene.
        :type contig_start_pos: float
        """

        self._contig_start_pos = contig_start_pos

    @property
    def contig_end_pos(self):
        """Gets the contig_end_pos of this Gene.


        :return: The contig_end_pos of this Gene.
        :rtype: float
        """
        return self._contig_end_pos

    @contig_end_pos.setter
    def contig_end_pos(self, contig_end_pos):
        """Sets the contig_end_pos of this Gene.


        :param contig_end_pos: The contig_end_pos of this Gene.
        :type contig_end_pos: float
        """

        self._contig_end_pos = contig_end_pos

    @property
    def notes(self):
        """Gets the notes of this Gene.


        :return: The notes of this Gene.
        :rtype: List[str]
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this Gene.


        :param notes: The notes of this Gene.
        :type notes: List[str]
        """

        self._notes = notes

    @property
    def pmids(self):
        """Gets the pmids of this Gene.


        :return: The pmids of this Gene.
        :rtype: List[str]
        """
        return self._pmids

    @pmids.setter
    def pmids(self, pmids):
        """Sets the pmids of this Gene.


        :param pmids: The pmids of this Gene.
        :type pmids: List[str]
        """

        self._pmids = pmids

    @property
    def ref_acc(self):
        """Gets the ref_acc of this Gene.


        :return: The ref_acc of this Gene.
        :rtype: str
        """
        return self._ref_acc

    @ref_acc.setter
    def ref_acc(self, ref_acc):
        """Sets the ref_acc of this Gene.


        :param ref_acc: The ref_acc of this Gene.
        :type ref_acc: str
        """

        self._ref_acc = ref_acc
