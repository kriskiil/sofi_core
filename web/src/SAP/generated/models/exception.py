# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from web.src.SAP.generated.models.base_model_ import Model
from web.src.SAP.generated import util


class Exception(Model):



    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
    Do not edit the class manually.
    """

    def __init__(self, source=None, message=None, stack_trace=None, data=None, target_site=None, help_link=None, inner_exception=None):  # noqa: E501
        """Exception - a model defined in OpenAPI

        :param source: The source of this Exception.  # noqa: E501
        :type source: str
        :param message: The message of this Exception.  # noqa: E501
        :type message: str
        :param stack_trace: The stack_trace of this Exception.  # noqa: E501
        :type stack_trace: str
        :param data: The data of this Exception.  # noqa: E501
        :type data: object
        :param target_site: The target_site of this Exception.  # noqa: E501
        :type target_site: str
        :param help_link: The help_link of this Exception.  # noqa: E501
        :type help_link: str
        :param inner_exception: The inner_exception of this Exception.  # noqa: E501
        :type inner_exception: Exception
        """
        self.openapi_types = {
            'source': str,
            'message': str,
            'stack_trace': str,
            'data': object,
            'target_site': str,
            'help_link': str,
            'inner_exception': Exception,
        }

        self.attribute_map = {
            'source': 'source',
            'message': 'message',
            'stack_trace': 'stackTrace',
            'data': 'data',
            'target_site': 'targetSite',
            'help_link': 'helpLink',
            'inner_exception': 'innerException',
        }

        self._source = source
        self._message = message
        self._stack_trace = stack_trace
        self._data = data
        self._target_site = target_site
        self._help_link = help_link
        self._inner_exception = inner_exception

    @classmethod
    def from_dict(cls, dikt):
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Exception of this Exception.  # noqa: E501
        :rtype: Exception
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source(self):
        """Gets the source of this Exception.


        :return: The source of this Exception.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this Exception.


        :param source: The source of this Exception.
        :type source: str
        """

        self._source = source

    @property
    def message(self):
        """Gets the message of this Exception.


        :return: The message of this Exception.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this Exception.


        :param message: The message of this Exception.
        :type message: str
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")  # noqa: E501

        self._message = message

    @property
    def stack_trace(self):
        """Gets the stack_trace of this Exception.


        :return: The stack_trace of this Exception.
        :rtype: str
        """
        return self._stack_trace

    @stack_trace.setter
    def stack_trace(self, stack_trace):
        """Sets the stack_trace of this Exception.


        :param stack_trace: The stack_trace of this Exception.
        :type stack_trace: str
        """

        self._stack_trace = stack_trace

    @property
    def data(self):
        """Gets the data of this Exception.


        :return: The data of this Exception.
        :rtype: object
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this Exception.


        :param data: The data of this Exception.
        :type data: object
        """

        self._data = data

    @property
    def target_site(self):
        """Gets the target_site of this Exception.


        :return: The target_site of this Exception.
        :rtype: str
        """
        return self._target_site

    @target_site.setter
    def target_site(self, target_site):
        """Sets the target_site of this Exception.


        :param target_site: The target_site of this Exception.
        :type target_site: str
        """

        self._target_site = target_site

    @property
    def help_link(self):
        """Gets the help_link of this Exception.


        :return: The help_link of this Exception.
        :rtype: str
        """
        return self._help_link

    @help_link.setter
    def help_link(self, help_link):
        """Sets the help_link of this Exception.


        :param help_link: The help_link of this Exception.
        :type help_link: str
        """

        self._help_link = help_link

    @property
    def inner_exception(self):
        """Gets the inner_exception of this Exception.


        :return: The inner_exception of this Exception.
        :rtype: Exception
        """
        return self._inner_exception

    @inner_exception.setter
    def inner_exception(self, inner_exception):
        """Sets the inner_exception of this Exception.


        :param inner_exception: The inner_exception of this Exception.
        :type inner_exception: Exception
        """

        self._inner_exception = inner_exception
