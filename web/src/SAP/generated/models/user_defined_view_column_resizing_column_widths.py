# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from .. import util


class UserDefinedViewColumnResizingColumnWidths(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, column_name=None, width=None):  # noqa: E501
        """UserDefinedViewColumnResizingColumnWidths - a model defined in OpenAPI

        :param column_name: The column_name of this UserDefinedViewColumnResizingColumnWidths.  # noqa: E501
        :type column_name: str
        :param width: The width of this UserDefinedViewColumnResizingColumnWidths.  # noqa: E501
        :type width: int
        """
        self.openapi_types = {
            'column_name': str,
            'width': int
        }

        self.attribute_map = {
            'column_name': 'columnName',
            'width': 'width'
        }

        self._column_name = column_name
        self._width = width

    @classmethod
    def from_dict(cls, dikt) -> 'UserDefinedViewColumnResizingColumnWidths':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The UserDefinedView_columnResizing_columnWidths of this UserDefinedViewColumnResizingColumnWidths.  # noqa: E501
        :rtype: UserDefinedViewColumnResizingColumnWidths
        """
        return util.deserialize_model(dikt, cls)

    @property
    def column_name(self):
        """Gets the column_name of this UserDefinedViewColumnResizingColumnWidths.


        :return: The column_name of this UserDefinedViewColumnResizingColumnWidths.
        :rtype: str
        """
        return self._column_name

    @column_name.setter
    def column_name(self, column_name):
        """Sets the column_name of this UserDefinedViewColumnResizingColumnWidths.


        :param column_name: The column_name of this UserDefinedViewColumnResizingColumnWidths.
        :type column_name: str
        """

        self._column_name = column_name

    @property
    def width(self):
        """Gets the width of this UserDefinedViewColumnResizingColumnWidths.


        :return: The width of this UserDefinedViewColumnResizingColumnWidths.
        :rtype: int
        """
        return self._width

    @width.setter
    def width(self, width):
        """Sets the width of this UserDefinedViewColumnResizingColumnWidths.


        :param width: The width of this UserDefinedViewColumnResizingColumnWidths.
        :type width: int
        """

        self._width = width
