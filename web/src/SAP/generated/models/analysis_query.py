# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from .base_model_ import Model
from .. import util


class AnalysisQuery(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filters=None):  # noqa: E501
        """AnalysisQuery - a model defined in OpenAPI

        :param filters: The filters of this AnalysisQuery.  # noqa: E501
        :type filters: Dict[str, str]
        """
        self.openapi_types = {
            'filters': Dict[str, str]
        }

        self.attribute_map = {
            'filters': 'filters'
        }

        self._filters = filters

    @classmethod
    def from_dict(cls, dikt) -> 'AnalysisQuery':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AnalysisQuery of this AnalysisQuery.  # noqa: E501
        :rtype: AnalysisQuery
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filters(self):
        """Gets the filters of this AnalysisQuery.


        :return: The filters of this AnalysisQuery.
        :rtype: Dict[str, str]
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this AnalysisQuery.


        :param filters: The filters of this AnalysisQuery.
        :type filters: Dict[str, str]
        """

        self._filters = filters
