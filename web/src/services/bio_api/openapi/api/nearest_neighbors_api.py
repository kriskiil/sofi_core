"""
    Bio API

    REST API for controlling bioinformatic calculations1  # noqa: E501

    The version of the OpenAPI document: 0.2.0
    Generated by: https://openapi-generator.tech
"""


import re  # noqa: F401
import sys  # noqa: F401

from web.src.services.bio_api.openapi.api_client import ApiClient, Endpoint as _Endpoint
from web.src.services.bio_api.openapi.model_utils import (  # noqa: F401
    check_allowed_values,
    check_validations,
    date,
    datetime,
    file_type,
    none_type,
    validate_and_convert_types
)
from web.src.services.bio_api.openapi.model.common_post_response import CommonPOSTResponse
from web.src.services.bio_api.openapi.model.http_validation_error import HTTPValidationError
from web.src.services.bio_api.openapi.model.message import Message
from web.src.services.bio_api.openapi.model.nearest_neighbors_get_response import NearestNeighborsGETResponse
from web.src.services.bio_api.openapi.model.nearest_neighbors_request import NearestNeighborsRequest


class NearestNeighborsApi(object):
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None):
        if api_client is None:
            api_client = ApiClient()
        self.api_client = api_client

        def __nearest_neighbors_v1_nearest_neighbors_post(
            self,
            nearest_neighbors_request,
            **kwargs
        ):
            """Nearest Neighbors  # noqa: E501

            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.nearest_neighbors_v1_nearest_neighbors_post(nearest_neighbors_request, async_req=True)
            >>> result = thread.get()

            Args:
                nearest_neighbors_request (NearestNeighborsRequest):

            Keyword Args:
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                CommonPOSTResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['nearest_neighbors_request'] = \
                nearest_neighbors_request
            return self.call_with_http_info(**kwargs)

        self.nearest_neighbors_v1_nearest_neighbors_post = _Endpoint(
            settings={
                'response_type': (CommonPOSTResponse,),
                'auth': [],
                'endpoint_path': '/v1/nearest_neighbors',
                'operation_id': 'nearest_neighbors_v1_nearest_neighbors_post',
                'http_method': 'POST',
                'servers': None,
            },
            params_map={
                'all': [
                    'nearest_neighbors_request',
                ],
                'required': [
                    'nearest_neighbors_request',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'nearest_neighbors_request':
                        (NearestNeighborsRequest,),
                },
                'attribute_map': {
                },
                'location_map': {
                    'nearest_neighbors_request': 'body',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [
                    'application/json'
                ]
            },
            api_client=api_client,
            callable=__nearest_neighbors_v1_nearest_neighbors_post
        )

        def __nn_result_v1_nearest_neighbors_nn_id_get(
            self,
            nn_id,
            **kwargs
        ):
            """Nn Result  # noqa: E501

            Get result of a nearest neighbors calculation  # noqa: E501
            This method makes a synchronous HTTP request by default. To make an
            asynchronous HTTP request, please pass async_req=True

            >>> thread = api.nn_result_v1_nearest_neighbors_nn_id_get(nn_id, async_req=True)
            >>> result = thread.get()

            Args:
                nn_id (str):

            Keyword Args:
                level (str): [optional] if omitted the server will use the default value of "full"
                _return_http_data_only (bool): response data without head status
                    code and headers. Default is True.
                _preload_content (bool): if False, the urllib3.HTTPResponse object
                    will be returned without reading/decoding response data.
                    Default is True.
                _request_timeout (int/float/tuple): timeout setting for this request. If
                    one number provided, it will be total request timeout. It can also
                    be a pair (tuple) of (connection, read) timeouts.
                    Default is None.
                _check_input_type (bool): specifies if type checking
                    should be done one the data sent to the server.
                    Default is True.
                _check_return_type (bool): specifies if type checking
                    should be done one the data received from the server.
                    Default is True.
                _host_index (int/None): specifies the index of the server
                    that we want to use.
                    Default is read from the configuration.
                async_req (bool): execute request asynchronously

            Returns:
                NearestNeighborsGETResponse
                    If the method is called asynchronously, returns the request
                    thread.
            """
            kwargs['async_req'] = kwargs.get(
                'async_req', False
            )
            kwargs['_return_http_data_only'] = kwargs.get(
                '_return_http_data_only', True
            )
            kwargs['_preload_content'] = kwargs.get(
                '_preload_content', True
            )
            kwargs['_request_timeout'] = kwargs.get(
                '_request_timeout', None
            )
            kwargs['_check_input_type'] = kwargs.get(
                '_check_input_type', True
            )
            kwargs['_check_return_type'] = kwargs.get(
                '_check_return_type', True
            )
            kwargs['_host_index'] = kwargs.get('_host_index')
            kwargs['nn_id'] = \
                nn_id
            return self.call_with_http_info(**kwargs)

        self.nn_result_v1_nearest_neighbors_nn_id_get = _Endpoint(
            settings={
                'response_type': (NearestNeighborsGETResponse,),
                'auth': [],
                'endpoint_path': '/v1/nearest_neighbors/{nn_id}',
                'operation_id': 'nn_result_v1_nearest_neighbors_nn_id_get',
                'http_method': 'GET',
                'servers': None,
            },
            params_map={
                'all': [
                    'nn_id',
                    'level',
                ],
                'required': [
                    'nn_id',
                ],
                'nullable': [
                ],
                'enum': [
                ],
                'validation': [
                ]
            },
            root_map={
                'validations': {
                },
                'allowed_values': {
                },
                'openapi_types': {
                    'nn_id':
                        (str,),
                    'level':
                        (str,),
                },
                'attribute_map': {
                    'nn_id': 'nn_id',
                    'level': 'level',
                },
                'location_map': {
                    'nn_id': 'path',
                    'level': 'query',
                },
                'collection_format_map': {
                }
            },
            headers_map={
                'accept': [
                    'application/json'
                ],
                'content_type': [],
            },
            api_client=api_client,
            callable=__nn_result_v1_nearest_neighbors_nn_id_get
        )
