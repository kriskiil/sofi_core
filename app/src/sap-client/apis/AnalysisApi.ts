// tslint:disable
/**
 * SAP
 * Sekvensanalyseplatform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import { HttpMethods, QueryConfig, ResponseBody, ResponseText } from 'redux-query';
import * as runtime from '../runtime';

import {
    PageOfAnalysis,
    PageOfAnalysisFromJSON,
    PageOfAnalysisToJSON,
} from '../models';

export interface GetAnalysisRequest {
    pagingToken?: string;
    pageSize?: number;
}


/**
 * Page through all the analysis in the system (WIP)
 */
function getAnalysisRaw<T>(requestParameters: GetAnalysisRequest, requestConfig: runtime.TypedQueryConfig<T, PageOfAnalysis> = {}): QueryConfig<T> {
    let queryParameters = null;

    queryParameters = {};


    if (requestParameters.pagingToken !== undefined) {
        queryParameters['pagingToken'] = requestParameters.pagingToken;
    }


    if (requestParameters.pageSize !== undefined) {
        queryParameters['pageSize'] = requestParameters.pageSize;
    }

    const headerParameters = {};


    const { meta = {} } = requestConfig;

    const config: QueryConfig<T> = {
        url: `/analysis`,
        meta,
        update: requestConfig.update,
        queryKey: requestConfig.queryKey,
        optimisticUpdate: requestConfig.optimisticUpdate,
        force: requestConfig.force,
        rollback: requestConfig.rollback,
        options: {
            method: 'GET',
            headers: headerParameters,
        },
        body: queryParameters,
    };

    const { transform: requestTransform } = requestConfig;
    if (requestTransform) {
        config.transform = (body: ResponseBody, text: ResponseBody) => requestTransform(PageOfAnalysisFromJSON(body), text);
    }

    return config;
}

/**
* Page through all the analysis in the system (WIP)
*/
export function getAnalysis<T>(requestParameters: GetAnalysisRequest, requestConfig?: runtime.TypedQueryConfig<T, PageOfAnalysis>): QueryConfig<T> {
    return getAnalysisRaw(requestParameters, requestConfig);
}

