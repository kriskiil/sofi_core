// tslint:disable
/**
 * SOFI
 * SOFI Sekvensanalyseplatform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    DataClearance,
    DataClearanceFromJSON,
    DataClearanceToJSON,
    Organization,
    OrganizationFromJSON,
    OrganizationToJSON,
    Permission,
    PermissionFromJSON,
    PermissionToJSON,
} from './';

/**
 * 
 * @export
 * @interface UserInfo
 */
export interface UserInfo  {
    /**
     * 
     * @type {string}
     * @memberof UserInfo
     */
    userId?: string;
    /**
     * 
     * @type {DataClearance}
     * @memberof UserInfo
     */
    data_clearance?: DataClearance;
    /**
     * 
     * @type {Organization}
     * @memberof UserInfo
     */
    institution?: Organization;
    /**
     * 
     * @type {Array<string>}
     * @memberof UserInfo
     */
    groups?: Array<string>;
    /**
     * 
     * @type {Array<Permission>}
     * @memberof UserInfo
     */
    permissions?: Array<Permission>;
}

export function UserInfoFromJSON(json: any): UserInfo {
    return {
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
        'data_clearance': !exists(json, 'data_clearance') ? undefined : DataClearanceFromJSON(json['data_clearance']),
        'institution': !exists(json, 'institution') ? undefined : OrganizationFromJSON(json['institution']),
        'groups': !exists(json, 'groups') ? undefined : json['groups'],
        'permissions': !exists(json, 'permissions') ? undefined : (json['permissions'] as Array<any>).map(PermissionFromJSON),
    };
}

export function UserInfoToJSON(value?: UserInfo): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'userId': value.userId,
        'data_clearance': DataClearanceToJSON(value.data_clearance),
        'institution': OrganizationToJSON(value.institution),
        'groups': value.groups,
        'permissions': value.permissions === undefined ? undefined : (value.permissions as Array<any>).map(PermissionToJSON),
    };
}


