// tslint:disable
/**
 * SAP
 * Sekvensanalyseplatform
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Analysis
 */
export interface Analysis  {
    /**
     * 
     * @type {string}
     * @memberof Analysis
     */
    analysisId: string;
    /**
     * 
     * @type {string}
     * @memberof Analysis
     */
    isolateId: string;
    /**
     * 
     * @type {Date}
     * @memberof Analysis
     */
    testTimestamp: Date;
    /**
     * 
     * @type {Date}
     * @memberof Analysis
     */
    dateReceived: Date;
    /**
     * 
     * @type {string}
     * @memberof Analysis
     */
    resfinderVersion?: string;
    /**
     * 
     * @type {string}
     * @memberof Analysis
     */
    serumType?: string;
    /**
     * 
     * @type {string}
     * @memberof Analysis
     */
    agent?: AnalysisAgentEnum;
    /**
     * 
     * @type {string}
     * @memberof Analysis
     */
    species?: AnalysisSpeciesEnum;
    /**
     * 
     * @type {string}
     * @memberof Analysis
     */
    organization?: AnalysisOrganizationEnum;
    /**
     * 
     * @type {string}
     * @memberof Analysis
     */
    project?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Analysis
     */
    approved: boolean;
}

export function AnalysisFromJSON(json: any): Analysis {
    return {
        'analysisId': json['analysisId'],
        'isolateId': json['isolateId'],
        'testTimestamp': new Date(json['testTimestamp']),
        'dateReceived': new Date(json['dateReceived']),
        'resfinderVersion': !exists(json, 'resfinderVersion') ? undefined : json['resfinderVersion'],
        'serumType': !exists(json, 'serumType') ? undefined : json['serumType'],
        'agent': !exists(json, 'agent') ? undefined : json['agent'],
        'species': !exists(json, 'species') ? undefined : json['species'],
        'organization': !exists(json, 'organization') ? undefined : json['organization'],
        'project': !exists(json, 'project') ? undefined : json['project'],
        'approved': json['approved'],
    };
}

export function AnalysisToJSON(value?: Analysis): any {
    if (value === undefined) {
        return undefined;
    }
    return {
        'analysisId': value.analysisId,
        'isolateId': value.isolateId,
        'testTimestamp': value.testTimestamp.toISOString(),
        'dateReceived': value.dateReceived.toISOString().substr(0,10),
        'resfinderVersion': value.resfinderVersion,
        'serumType': value.serumType,
        'agent': value.agent,
        'species': value.species,
        'organization': value.organization,
        'project': value.project,
        'approved': value.approved,
    };
}

/**
* @export
* @enum {string}
*/
export enum AnalysisAgentEnum {
    EColi = 'e.coli',
    Salmonella = 'salmonella'
}
/**
* @export
* @enum {string}
*/
export enum AnalysisSpeciesEnum {
    Rat = 'rat',
    Human = 'human',
    Pig = 'pig',
    Dog = 'dog'
}
/**
* @export
* @enum {string}
*/
export enum AnalysisOrganizationEnum {
    FVST = 'FVST',
    SSI = 'SSI'
}


