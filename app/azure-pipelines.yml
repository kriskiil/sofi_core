pool:
  vmImage: 'ubuntu-latest'

variables:
  imageName: '$(dockerId)/sap-web:$(Build.SourceBranchName)'
  imageNameRelease: '$(dockerId)/sap-web:latest'

steps:
- script: docker build -f Dockerfile -t $(imageName) .
  displayName: 'Docker build and test'
  workingDirectory: app

- script: |
    export id=$(docker images --filter "label=test=true" -q | head -1)
    docker create --name testcontainer $id
    docker cp testcontainer:/app/junit.xml ./junit.xml
    docker rm testcontainer
  displayName: 'Get test results'
  condition: succeededOrFailed()

- task: PublishTestResults@2
  inputs:
    testResultsFiles: '**/junit.xml' 
    searchFolder: '$(System.DefaultWorkingDirectory)/'
    publishRunAttachments: true
    failTaskOnFailedTests: true
  displayName: 'Publish test results'
  condition: succeededOrFailed()

- script: |
    echo $(dockerPass) | docker login -u $(dockerId) --password-stdin
    docker push $(imageName)
  displayName: 'Publish docker image'

- script: |
    echo 'echo $(dockerPass) | docker login -u $(dockerId) --password-stdin' > deployment.sh
    echo 'docker pull $(imageName)' >> deployment.sh
    echo 'docker tag $(imageName) $(imageNameRelease)' >> deployment.sh
    echo 'docker push $(imageNameRelease)' >> deployment.sh
  displayName: 'Create deployment script'

- publish: deployment.sh
  artifact: WEB_DEPLOYMENT