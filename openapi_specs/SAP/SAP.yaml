openapi: 3.0.1
info:
  description: Sekvensanalyseplatform
  title: SAP
  version: 0.1.0
servers:
  - url: 'http://localhost:8080/api/'
tags:
  - description: Operations about user
    name: user
  - description: Operations for isolates
    name: analysis
security:
  - jwt: []

paths:
  /me:
    get:
      description: Describe the current user and their permissions
      operationId: who_am_i
      x-openapi-router-controller: web.src.SAP.generated.controllers.user_controller
      tags:
        - user
      responses:
        '200':
          description: User info
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserInfo'

  /analysis:
    get:
      description: Page through all the analysis in the system (WIP)
      operationId: get_analysis
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      tags:
        - analysis
      parameters:
        - name: paging_token
          in: query
          description: opaque token to supply to get the next page of isolates
          required: false
          schema:
            type: string
            format: byte
            nullable: true
        - name: page_size
          in: query
          required: false
          schema:
            type: number
            default: 100
      responses:
        '200':
          description: Page of isolates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnalysis'

    post:
      description: Search all analysis by given query
      operationId: search_analysis
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      x-codegen-request-body-name: query
      tags:
        - analysis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisQuery'
      responses:
        '200':
          description: Page of isolates
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PageOfAnalysis'
  /analysis/columns:
    get:
      description: Get column metadata, scoped to authenticated user
      operationId: get_columns
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      tags:
        - analysis
      responses:
        '200':
          description: Column collection
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Column'
  /analysis/changes:
    post:
      description: Submit a batch of analysis data changes
      operationId: submit_changes
      tags:
        - analysis
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnalysisChange'
      responses:
        '200':
          description: Changes accepted 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalysisChange'
  /analysis/reload_metadata:
    post:
      description: Reload metadata for a given isolate
      operationId: reload_metadata
      tags:
        - analysis
      x-openapi-router-controller: web.src.SAP.generated.controllers.analysis_controller
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetadataReloadRequest'
      responses:
        '200':
          description: Reload successful 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetadataReloadResponse'

  /approvals:
    get:
      description: Retrieve list of approvals for authenticated user
      operationId: get_approvals
      tags:
        - approval
      x-openapi-router-controller: web.src.SAP.generated.controllers.approval_controller
      responses:
        '200':
          description: List of Approvals
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Approval'
    post:
      description: Submit approval/rejection information
      operationId: create_approval
      tags:
        - approval
      x-openapi-router-controller: web.src.SAP.generated.controllers.approval_controller
      x-codegen-request-body-name: body
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApprovalRequest'
      responses:
        '201':
          description: Approval accepted 
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Approval'
  /approvals/matrix:
    get:
      description: Get the entire approval matrix for all analysis
      operationId: full_approval_matrix
      tags:
        - approval
      x-openapi-router-controller: web.src.SAP.generated.controllers.approval_controller
      responses:
        '200':
          description: Approval matrix 
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ApprovalMatrix"
  '/approvals/{approval_id}':
    delete:
      description: Cancel a pending approval
      operationId: cancel_approval
      tags:
        - approval
      x-openapi-router-controller: web.src.SAP.generated.controllers.approval_controller
      parameters:
        - name: approval_id
          in: path
          required: true
          schema:
            type: string
          description: Id of approval to cancel
          explode: true
      responses:
        '204':
          description: Approval cancelled successfully.
      
  /user/views:
    get:
      operationId: get_user_views
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserDefinedView"
          description: Return user-defined view collection for the authenticated user
      tags:
        - user
      x-openapi-router-controller: web.src.SAP.generated.controllers.user_controller
    post:
      operationId: create_user_view
      requestBody:
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UserDefinedView"
      responses:
        '204':
          description: "User-defined view created."
      tags:
        - user
      x-openapi-router-controller: web.src.SAP.generated.controllers.user_controller
  /user/views/{name}:
    delete:
      description: Delete an existing view
      operationId: delete_view
      tags:
        - user
      x-openapi-router-controller: web.src.SAP.generated.controllers.user_controller
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
          description: Name of view to delete
      responses:
        '204':
          description: View deleted successfully.

  /gdpr/extract:
    get:
      description: Extract all data given a personal identifier
      operationId: extract_data_from_pi
      tags:
        - gdpr
      x-openapi-router-controller: web.src.SAP.generated.controllers.gdpr_controller
      parameters:
        - in: query
          name: identifier_type
          schema:
            $ref: '#/components/schemas/PersonalIdentifierType'
          description: Identifier type
          required: true
        - in: query
          name: identifier
          schema:
            type: string
          description: Personal identifier number.
          required: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PersonalData'

  /upload/single_upload:
    post:
      description: Manually upload isolate with metadata
      operationId: single_upload
      x-openapi-router-controller: web.src.SAP.generated.controllers.upload_controller
      x-codegen-request-body-name: query
      tags:
        - upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SingleUploadRequest'
            encoding:
              metadata:
                contentType: application/json
              file:
                contentType: application/gzip
      responses:
        '200':
          description: Isolate uploaded successfully. Reports errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

  /upload/multi_upload:
    post:
      description: Manually upload multiple sequences with metadata
      operationId: multi_upload
      x-openapi-router-controller: web.src.SAP.generated.controllers.upload_controller
      x-codegen-request-body-name: query
      tags:
        - upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MultiUploadRequest'
            encoding:
              metadata_tsv:
                contentType: text/tsv
              files:
                contentType: application/gzip
      responses:
        '200':
          description: Isolate uploaded successfully. Reports errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

  /upload/bulk_metadata:
    post:
      description: Manually upload metadata for previously uploaded sequence files
      operationId: bulk_metadata
      x-openapi-router-controller: web.src.SAP.generated.controllers.upload_controller
      x-codegen-request-body-name: query
      tags:
        - upload
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BulkUploadRequest'
            encoding:
              path:
                contentType: text/plain
              metadata_tsv:
                contentType: text/tsv
      responses:
        '200':
          description: Isolate uploaded successfully. Reports errors.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UploadResponse'

components:
  schemas:
    Organization:
      type: string
      enum: [SSI, FVST, Other]

    PageOfAnalysis:
      required:
        - paging_token
        - total_count
        - items
        - approval_matrix
      properties:
        paging_token:
          type: string
          nullable: true
        total_count:
          type: integer
        items:
          type: array
          items:
            $ref: '#/components/schemas/AnalysisResult'
        approval_matrix:
          $ref: '#/components/schemas/ApprovalMatrix'

    AnalysisQuery:
      properties:
        paging_token:
          type: string
          description: opaque token to supply to get the next page of isolates
          format: byte
          nullable: true
        page_size:
          type: integer
          default: 100
          nullable: true
        filters:
          type: object
          additionalProperties:
            type: string

    Column:
      properties:
        approvable:
          description: True if the column can be approved
          type: boolean
        editable:
          description: True if the column can be edited
          type: boolean
        pii:
          description: True if the column should be restricted to viewing only by the institution that owns it
          type: boolean
        gdpr:
          description: True if the column should be treated as a 'gdpr' column, subject to more strict auditing/logging
          type: boolean
        organizations:
          type: array
          description: List of organizations/institutions who 'own' or should have unrestricted access to this field
          items:
            $ref: "#/components/schemas/Organization"
        field_name:
          type: string
        approves_with:
          description: List of other columns, if any, that should be sent along when this column gets approved
          type: array
          items:
            type: string

    UserDefinedView:
      type: object
      properties:
        name:
          type: string
        hidden_columns:
          type: array
          items:
            type: string
        column_resizing:
          type: object
          properties:
            column_widths:
              type: object
              additionalProperties: true
            column_width:
              type: integer
        sort_by:
          type: array
          items:
            type: object
            properties:
              desc:
                type: boolean
              id:
                type: string
        column_order:
          type: array
          items:
            type: string
    ApprovalRequest:
      type: object
      required:
        - matrix
      properties:
        matrix:
          $ref: "#/components/schemas/ApprovalMatrix"

    Approval:
      allOf:
        - $ref: '#/components/schemas/ApprovalRequest'
        - type: object
          properties:
            id:
              type: string
            approver:
              type: string
            timestamp:
              type: string
              format: date-time
            status:
              type: string
              enum: [pending, cancelled, submitted]

    ApprovalStatus:
      type: string
      enum: [pending, rejected, approved]

    ApprovalMatrix:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: string
          $ref: "#/components/schemas/ApprovalStatus"

    AnalysisChange:
      type: object
      additionalProperties:
        type: object
        additionalProperties:
          type: string

    MetadataReloadRequest:
      type: object
      properties:
        isolateId:
          type: string
        institution:
          $ref: "#/components/schemas/Organization"

    MetadataReloadResponse:
      oneOf:
        - $ref: '#/components/schemas/TbrMetadata'
        - $ref: '#/components/schemas/LimsMetadata'
      discriminator:
        propertyName: objectType

    Resistance:
      type: string
      enum: ["Sensitiv", "Resistent", "Ukendt"]

    BaseMetadata:
      required:
        - isolate_id
        - sequence_id
        - sequence_filename
        - institution
        - received_date
        - run_id
        - provided_species
        - primary_isolate
      properties:
        isolate_id:
          type: string
        sequence_id:
          type: string
        sequence_filename:
          type: string
        institution:
          $ref: "#/components/schemas/Organization"
        project_number:
          type: number
        project_title:
          type: string
        sampling_date:
          format: date-time
          type: string
        received_date:
          format: date-time
          type: string
        run_id:
          type: string
        public:
          type: string
        provided_species:
          type: string
        primary_isolate:
          type: boolean

    TbrSpecificMetadata:
      type: object
      required:
        - run_date
      properties:
        cpr:
          type: string
        gender:
          type: string
          enum:
            - M
            - K
        name:
          type: string
          x-faker: name.findName
        age:
          type: integer
          minimum: 0
          maximum: 128
        travel:
          type: string
        travel_country:
          type: string
          x-faker: address.country
        run_date:
          format: date-time
          type: string
        kma_received_date:
          format: date-time
          type: string
        kma:
          type: string
        region:
          type: string
        fud_number:
          type: string
        cluster_id:
          type: string
        epi_export:
          type: string

    TbrMetadata:
      allOf:
        - $ref: '#/components/schemas/BaseMetadata'
        - $ref: '#/components/schemas/TbrSpecificMetadata'

    LimsSpecificMetadata:
      type: object
      properties:
        chr_number:
          type: string
        cvr_number:
          type: string
        aut_number:
          type: string
        product_type:
          type: string
        product:
          type: string
        origin_country:
          type: string
          x-faker: address.country
        animal_species:
          type: string
        sample_info:
          type: string

    LimsMetadata:
      allOf:
        - $ref: '#/components/schemas/BaseMetadata'
        - $ref: '#/components/schemas/LimsSpecificMetadata'

    AnalysisResult:
      allOf:
        - $ref: '#/components/schemas/BaseMetadata'
        - $ref: '#/components/schemas/LimsSpecificMetadata'
        - $ref: '#/components/schemas/TbrSpecificMetadata'
        - type: object
          required:
            - _id
            - isolate_id
          properties:
            _id:
              type: string
              format: uuid
            resfinder_version:
              type: string
            qc_provided_species:
              type: number
            qc_genome1x:
              type: number
            qc_genome10x:
              type: number
            qc_gsize_diff1x10:
              type: number
            qc_avg_coverage:
              type: number
            qc_final:
              type: string
              enum: ["A", "B", "C"]
            subspecies:
              type: string
            species_final:
              type: string
            st:
              type: string
            pathotype:
              type: string
            pathotype_final:
              type: string
            serotype:
              type: string
            serotype_final:
              type: string
            adhesion:
              type: string
            adhesion_final:
              type: string
            toxins:
              type: string
            toxins_final:
              type: string
            infection_source:
              type: string
            resistance_genes:
              type: string
            amr_profile:
              type: string
            amr_ami:
              $ref: "#/components/schemas/Resistance"
            amr_amp:
              $ref: "#/components/schemas/Resistance"
            amr_azi:
              $ref: "#/components/schemas/Resistance"
            amr_fep:
              $ref: "#/components/schemas/Resistance"
            amr_fot:
              $ref: "#/components/schemas/Resistance"
            amr_f_c:
              $ref: "#/components/schemas/Resistance"
            amr_fox:
              $ref: "#/components/schemas/Resistance"
            amr_taz:
              $ref: "#/components/schemas/Resistance"
            amr_t_c:
              $ref: "#/components/schemas/Resistance"
            amr_chl:
              $ref: "#/components/schemas/Resistance"
            amr_cip:
              $ref: "#/components/schemas/Resistance"
            amr_cli:
              $ref: "#/components/schemas/Resistance"
            amr_col:
              $ref: "#/components/schemas/Resistance"
            amr_dap:
              $ref: "#/components/schemas/Resistance"
            amr_etp:
              $ref: "#/components/schemas/Resistance"
            amr_ery:
              $ref: "#/components/schemas/Resistance"
            amr_fus:
              $ref: "#/components/schemas/Resistance"
            amr_gen:
              $ref: "#/components/schemas/Resistance"
            amr_imi:
              $ref: "#/components/schemas/Resistance"
            amr_kan:
              $ref: "#/components/schemas/Resistance"
            amr_lzd:
              $ref: "#/components/schemas/Resistance"
            amr_mero:
              $ref: "#/components/schemas/Resistance"
            amr_mup:
              $ref: "#/components/schemas/Resistance"
            amr_nal:
              $ref: "#/components/schemas/Resistance"
            amr_pen:
              $ref: "#/components/schemas/Resistance"
            amr_syn:
              $ref: "#/components/schemas/Resistance"
            amr_rif:
              $ref: "#/components/schemas/Resistance"
            amr_str:
              $ref: "#/components/schemas/Resistance"
            amr_sul:
              $ref: "#/components/schemas/Resistance"
            amr_tei:
              $ref: "#/components/schemas/Resistance"
            amr_trm:
              $ref: "#/components/schemas/Resistance"
            amr_tet:
              $ref: "#/components/schemas/Resistance"
            amr_tia:
              $ref: "#/components/schemas/Resistance"
            amr_tgc:
              $ref: "#/components/schemas/Resistance"
            amr_tmp:
              $ref: "#/components/schemas/Resistance"
            amr_van:
              $ref: "#/components/schemas/Resistance"

    SingleUploadRequest:
      type: object
      required:
        - metadata
        - file
      properties:
        metadata:
          $ref: '#/components/schemas/BaseMetadata'
        file:
          type: string
          format: binary

    MultiUploadRequest:
      type: object
      required:
        - metadata_tsv
        - files
      properties:
        metadata_tsv:
          type: string
          format: binary
        files:
          type: array
          items:
            type: string
            format: binary

    BulkUploadRequest:
      type: object
      required:
        - path
        - metadata_tsv
      properties:
        path:
          type: string
        metadata_tsv:
          type: string
          format: binary

    UploadResponse:
      type: object
      properties:
        errors:
          type: array
          items: 
            type: string


    PersonalIdentifierType:
      type: string
      enum: ["CPR", "CVR", "CHR"]

    PersonalData:
      required:
        - data
      type: object
      properties:
        data:
          type: string
    
    DataClearance:
      type: string
      enum: ["own-institution", "cross-institution", "all"]

    Permission:
      type: string
      enum: ["search", "export", "approve", "phylogeny.read", "phylogeny.write", "gdpr.manage", "permissions.write"]

    UserInfo:
      type: object
      properties:
        userId:
          type: string
        data_clearance:
          $ref: "#/components/schemas/DataClearance"
        institution:
          $ref:  "#/components/schemas/Organization"
        groups:
          type: array
          items:
            type: string
        permissions:
          type: array
          items:
            $ref: "#/components/schemas/Permission"

  securitySchemes:
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
      x-bearerInfoFunc: web.src.SAP.generated.controllers.security_controller_.info_from_jwt
