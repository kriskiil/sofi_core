version: '3.4'

x-extra_hosts:
  &default-extra_hosts
  - "sofi_tbr_integration:192.168.113.11"
  - "sofi_tbr_integration_dev:192.168.113.12"

services:

  sap_api:
    expose:
      - 6000
    ports:
      - "6000:6000"
    command: ["/bin/sh", "-c", "/app/start.sh"]
    depends_on:
      - "hydra"

    environment:
      - APP_MODULE=wsgi:app
      - IDP=https://${SOFI_HOSTNAME}
      - SOFI_CLIENT_ID=${SOFI_CLIENT_ID}
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - SOFI_UPLOAD_DIR=/tmp
      - LOG_LEVEL=${LOG_LEVEL}

  sap_app:
    expose:
      - 3333
    user: ${CURRENT_UID}
    environment:
      - NODE_ENV=production
      - PORT=3333
    depends_on:
      - "sap_api"

  sap_broker_queue:
    container_name: bifrost_queue_broker
    user: ${CURRENT_UID}
    restart: on-failure
    environment:
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - BIFROST_MONGO_CONN=${BIFROST_MONGO_CONN}
      - BIFROST_MONGO_DB=${BIFROST_MONGO_DB}
      - BIFROST_MONGO_QUEUE_COLLECTION=sap_broker_queue
      - BIFROST_MONGO_TBR_METADATA_COLLECTION=sap_tbr_metadata
      - BIFROST_MONGO_LIMS_METADATA_COLLECTION=sap_lims_metadata
      - BIFROST_MONGO_ANALYSIS_VIEW_COLLECTION=sap_analysis_results
      - SOFI_BIFROST_ENCRYPTION_NAME=${SOFI_BIFROST_ENCRYPTION_NAME}
      - SOFI_BIFROST_ENCRYPTION_KEY=${SOFI_BIFROST_ENCRYPTION_KEY}
      - TBR_API_URL=${TBR_API_URL}
      - LIMS_API_URL=${LIMS_API_URL}
      - LIMS_API_DATABASEID=${LIMS_API_DATABASEID}
      - LIMS_API_USERNAME=${LIMS_API_USERNAME}
      - LIMS_API_PASSWORD=${LIMS_API_PASSWORD}
      - LOG_LEVEL=${LOG_LEVEL}
    volumes:
      - ${TBR_CLIENT_KEY}:/app/.certs/client.key:ro
      - ${TBR_CLIENT_CERT}:/app/.certs/client.pem:ro
      - ${TBR_ROOT_CA}:/app/.certs/SOFI_ROOT.pem:ro
    extra_hosts: *default-extra_hosts

  bifrost_listener:
    container_name: bifrost_listener
    user: ${CURRENT_UID}
    environment:
      - BIFROST_CONN=${BIFROST_MONGO_CONN}
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONUNBUFFERED=0
      - LOG_LEVEL=${LOG_LEVEL}
    restart: on-failure
    depends_on:
      - "sap_api"

  proxy:
    networks:
      default:
        aliases:
          - ${SOFI_HOSTNAME}
    container_name: ${SOFI_HOSTNAME}
    hostname: ${SOFI_HOSTNAME}
    image: caddy:2.2.0-alpine
    environment:
      SOFI_HOSTNAME: ${SOFI_HOSTNAME}
      SOFI_PORT: ${SOFI_PORT}
    ports:
      - "${SOFI_PORT}:443"
    command:
      - "caddy"
      - "run"
      - "-config"
      - "/etc/Caddyfile"
    depends_on:
      - "sap_api"
      - "sap_app"
      - "auth-selfservice-ui"
    volumes:
      - ./Caddyfile:/etc/Caddyfile:ro
      - ${TLS_KEY_PATH}:/etc/sofi.pem:ro
      - ${TLS_CERT_PATH}:/etc/sofi.crt:ro

  postgresd:
    image: postgres:9.6
    user: ${CURRENT_UID}
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_SECRET}
      - POSTGRES_MULTIPLE_DATABASES=kratos,hydra
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./auth/pg/pg-init:/docker-entrypoint-initdb.d
      - ${PG_DATA_DIR}:/var/lib/postgresql/data/

  hydra-migrate:
    image: oryd/hydra:v1.9.0-alpine
    depends_on:
      - postgresd
    environment:
      - DSN=postgres://${PG_USER}:${PG_SECRET}@postgresd:5432/hydra?sslmode=${SSL_MODE}
    command:
      migrate sql -e --yes
    restart: on-failure

  hydra:
    image: oryd/hydra:v1.9.0-alpine
    user: ${CURRENT_UID}
    depends_on:
      - hydra-migrate
    ports:
      - "4444:4444" # Public port
      - "4445:4445" # Admin port
    expose:
      - 4444
    command:
      serve all --sqa-opt-out
    restart: on-failure
    environment:
      - STRATEGIES_ACCESS_TOKEN=jwt
      - OAUTH2_EXPOSE_INTERNAL_ERRORS=${LOG_LEAK_SENSITIVE_VALUES}
      - LOG_LEAK_SENSITIVE_VALUES=${LOG_LEAK_SENSITIVE_VALUES}
      - TTL_ACCESS_TOKEN=${TTL_ACCESS_TOKEN}
      - TTL_ID_TOKEN=${TTL_ACCESS_TOKEN}
      - TTL_REFRESH_TOKEN=${TTL_REFRESH_TOKEN}
      - WEBFINGER_OIDC_DISCOVERY_AUTH_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/oauth2/auth
      - WEBFINGER_OIDC_DISCOVERY_TOKEN_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/oauth2/token
      - WEBFINGER_OIDC_DISCOVERY_JWKS_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/.well-known/jwks.json
      - WEBFINGER_OIDC_DISCOVERY_USERINFO_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/.well-known/userinfo
      - URLS_SELF_ISSUER=https://${SOFI_HOSTNAME}:${SOFI_PORT}
      - URLS_SELF_PUBLIC=https://${SOFI_HOSTNAME}:${SOFI_PORT}
      - URLS_CONSENT=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/auth/hydra/consent
      - URLS_LOGIN=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/auth/hydra/login
      - URLS_LOGOUT=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/logout
      - SECRETS_SYSTEM=${SECRETS_SYSTEM}
      - DSN=postgres://${PG_USER}:${PG_SECRET}@postgresd:5432/hydra?sslmode=${SSL_MODE}
      - SQA_OPT_OUT=true
      - SERVE_TLS_ALLOW_TERMINATION_FROM=${SOFI_SUBNET},127.0.0.1/32
    volumes:
      -
        type: bind
        source: ./auth/config/hydra/
        target: /home/ory/

  auth-selfservice-ui:
    environment:
      - HYDRA_ADMIN_URL=http://hydra:4445
      - HYDRA_BROWSER_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}
      - KRATOS_BROWSER_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/.ory/kratos/public
      - KRATOS_PUBLIC_URL=http://kratos:4433/
      - KRATOS_ADMIN_URL=http://kratos:4434/
      - SECURITY_MODE=standalone
      - PROJECT_NAME=SOFI
      - BASE_URL=/ss/
    ports:
      - "3000:3000"

  kratos-migrate:
    image: oryd/kratos:v0.5.5-alpha.1
    environment:
      - DSN=postgres://${PG_USER}:${PG_SECRET}@postgresd:5432/kratos?sslmode=${SSL_MODE}&max_conns=20&max_idle_conns=4
    volumes:
      -
        type: bind
        source: ./auth/config/kratos
        target: /etc/config/kratos
    command:
      -c /etc/config/kratos/.kratos.yml migrate sql -e --yes
    restart: on-failure

  kratos:
    depends_on:
      - kratos-migrate
    image: oryd/kratos:v0.5.5-alpha.1
    ports:
      - "4433:4433" # public
      - "4434:4434" # admin
    restart: unless-stopped
    environment:
      - DSN=postgres://${PG_USER}:${PG_SECRET}@postgresd:5432/kratos?sslmode=${SSL_MODE}&max_conns=20&max_idle_conns=4
      - SERVE_PUBLIC_BASE_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/.ory/kratos/public/
      - SELFSERVICE_WHITELISTED_RETURN_URLS=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/auth/hydra/login,https://${SOFI_HOSTNAME}:${SOFI_PORT}/,https://${SOFI_HOSTNAME}/
      - SELFSERVICE_DEFAULT_BROWSER_RETURN_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}
      - SELFSERVICE_FLOWS_SETTINGS_UI_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/settings
      - SELFSERVICE_FLOWS_VERIFICATION_UI_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/verify
      - SELFSERVICE_FLOWS_VERIFICATION_AFTER_DEFAULT_BROWSER_RETURN_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}
      - SELFSERVICE_FLOWS_RECOVERY_UI_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/recovery
      - SELFSERVICE_FLOWS_LOGOUT_UI_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/logout
      - SELFSERVICE_FLOWS_LOGIN_UI_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/auth/login
      - SELFSERVICE_FLOWS_REGISTRATION_UI_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/auth/registration
      - SELFSERVICE_FLOWS_ERROR_UI_URL=https://${SOFI_HOSTNAME}:${SOFI_PORT}/ss/error
      - COURIER_SMTP_CONNECTION_URI=${COURIER_SMTP_CONNECTION_URI}
      - SQA_OPT_OUT=true
    command:
      serve -c /etc/config/kratos/.kratos.yml
    volumes:
      -
        type: bind
        source: ./auth/config/kratos
        target: /etc/config/kratos

networks:
  default:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: ${SOFI_SUBNET} 
